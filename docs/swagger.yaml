basePath: /api/v1
consumes:
- application/json
definitions:
  cyclonedx.Advisory:
    properties:
      title:
        type: string
      url:
        type: string
    type: object
  cyclonedx.AffectedVersions:
    properties:
      range:
        type: string
      status:
        $ref: '#/definitions/cyclonedx.VulnerabilityStatus'
      version:
        type: string
    type: object
  cyclonedx.Affects:
    properties:
      ref:
        type: string
      versions:
        items:
          $ref: '#/definitions/cyclonedx.AffectedVersions'
        type: array
    type: object
  cyclonedx.Affirmation:
    properties:
      signatories:
        items:
          $ref: '#/definitions/cyclonedx.Signatory'
        type: array
      signature:
        $ref: '#/definitions/cyclonedx.JSFSignature'
      statement:
        type: string
    type: object
  cyclonedx.Annotation:
    properties:
      annotator:
        $ref: '#/definitions/cyclonedx.Annotator'
      bom-ref:
        type: string
      subjects:
        items:
          type: string
        type: array
      text:
        type: string
      timestamp:
        type: string
    type: object
  cyclonedx.Annotator:
    properties:
      component:
        $ref: '#/definitions/cyclonedx.Component'
      individual:
        $ref: '#/definitions/cyclonedx.OrganizationalContact'
      organization:
        $ref: '#/definitions/cyclonedx.OrganizationalEntity'
      service:
        $ref: '#/definitions/cyclonedx.Service'
    type: object
  cyclonedx.Assessor:
    properties:
      bom-ref:
        type: string
      organization:
        $ref: '#/definitions/cyclonedx.OrganizationalEntity'
      thirdParty:
        type: boolean
    type: object
  cyclonedx.AttachedText:
    properties:
      content:
        type: string
      contentType:
        type: string
      encoding:
        type: string
    type: object
  cyclonedx.Attestation:
    properties:
      assessor:
        type: string
      map:
        items:
          $ref: '#/definitions/cyclonedx.AttestationMap'
        type: array
      signature:
        $ref: '#/definitions/cyclonedx.JSFSignature'
      summary:
        type: string
    type: object
  cyclonedx.AttestationConfidence:
    properties:
      rationale:
        type: string
      score:
        type: number
    type: object
  cyclonedx.AttestationConformance:
    properties:
      mitigationStrategies:
        items:
          type: string
        type: array
      rationale:
        type: string
      score:
        type: number
    type: object
  cyclonedx.AttestationMap:
    properties:
      claims:
        items:
          type: string
        type: array
      confidence:
        $ref: '#/definitions/cyclonedx.AttestationConfidence'
      conformance:
        $ref: '#/definitions/cyclonedx.AttestationConformance'
      counterClaims:
        items:
          type: string
        type: array
      requirement:
        type: string
    type: object
  cyclonedx.BOM:
    properties:
      $schema:
        description: JSON specific fields
        type: string
      annotations:
        items:
          $ref: '#/definitions/cyclonedx.Annotation'
        type: array
      bomFormat:
        type: string
      components:
        items:
          $ref: '#/definitions/cyclonedx.Component'
        type: array
      compositions:
        items:
          $ref: '#/definitions/cyclonedx.Composition'
        type: array
      declarations:
        $ref: '#/definitions/cyclonedx.Declarations'
      definitions:
        $ref: '#/definitions/cyclonedx.Definitions'
      dependencies:
        items:
          $ref: '#/definitions/cyclonedx.Dependency'
        type: array
      externalReferences:
        items:
          $ref: '#/definitions/cyclonedx.ExternalReference'
        type: array
      formulation:
        items:
          $ref: '#/definitions/cyclonedx.Formula'
        type: array
      metadata:
        $ref: '#/definitions/cyclonedx.Metadata'
      properties:
        items:
          $ref: '#/definitions/cyclonedx.Property'
        type: array
      serialNumber:
        type: string
      services:
        items:
          $ref: '#/definitions/cyclonedx.Service'
        type: array
      specVersion:
        $ref: '#/definitions/cyclonedx.SpecVersion'
      version:
        type: integer
      vulnerabilities:
        items:
          $ref: '#/definitions/cyclonedx.Vulnerability'
        type: array
    type: object
  cyclonedx.Callstack:
    properties:
      frames:
        items:
          $ref: '#/definitions/cyclonedx.CallstackFrame'
        type: array
    type: object
  cyclonedx.CallstackFrame:
    properties:
      column:
        type: integer
      fullFilename:
        type: string
      function:
        type: string
      line:
        type: integer
      module:
        type: string
      package:
        type: string
      parameters:
        items:
          type: string
        type: array
    type: object
  cyclonedx.CertificateProperties:
    properties:
      certificateExtension:
        type: string
      certificateFormat:
        type: string
      issuerName:
        type: string
      notValidAfter:
        type: string
      notValidBefore:
        type: string
      signatureAlgorithmRef:
        type: string
      subjectName:
        type: string
      subjectPublicKeyRef:
        type: string
    type: object
  cyclonedx.CipherSuite:
    properties:
      algorithms:
        items:
          type: string
        type: array
      identifiers:
        items:
          type: string
        type: array
      name:
        type: string
    type: object
  cyclonedx.Claim:
    properties:
      bom-ref:
        type: string
      counterEvidence:
        items:
          type: string
        type: array
      evidence:
        items:
          type: string
        type: array
      externalReferences:
        items:
          $ref: '#/definitions/cyclonedx.ExternalReference'
        type: array
      mitigationStrategies:
        items:
          type: string
        type: array
      predicate:
        type: string
      reasoning:
        type: string
      signature:
        $ref: '#/definitions/cyclonedx.JSFSignature'
      target:
        type: string
    type: object
  cyclonedx.Commit:
    properties:
      author:
        $ref: '#/definitions/cyclonedx.IdentifiableAction'
      committer:
        $ref: '#/definitions/cyclonedx.IdentifiableAction'
      message:
        type: string
      uid:
        type: string
      url:
        type: string
    type: object
  cyclonedx.Component:
    properties:
      author:
        description: 'Deprecated: Use authors or manufacturer instead.'
        type: string
      authors:
        items:
          $ref: '#/definitions/cyclonedx.OrganizationalContact'
        type: array
      bom-ref:
        type: string
      components:
        items:
          $ref: '#/definitions/cyclonedx.Component'
        type: array
      copyright:
        type: string
      cpe:
        type: string
      cryptoProperties:
        $ref: '#/definitions/cyclonedx.CryptoProperties'
      data:
        $ref: '#/definitions/cyclonedx.ComponentData'
      description:
        type: string
      evidence:
        $ref: '#/definitions/cyclonedx.Evidence'
      externalReferences:
        items:
          $ref: '#/definitions/cyclonedx.ExternalReference'
        type: array
      group:
        type: string
      hashes:
        items:
          $ref: '#/definitions/cyclonedx.Hash'
        type: array
      licenses:
        items:
          $ref: '#/definitions/cyclonedx.LicenseChoice'
        type: array
      manufacturer:
        $ref: '#/definitions/cyclonedx.OrganizationalEntity'
      mime-type:
        type: string
      modelCard:
        $ref: '#/definitions/cyclonedx.MLModelCard'
      modified:
        type: boolean
      name:
        type: string
      omniborId:
        items:
          type: string
        type: array
      pedigree:
        $ref: '#/definitions/cyclonedx.Pedigree'
      properties:
        items:
          $ref: '#/definitions/cyclonedx.Property'
        type: array
      publisher:
        type: string
      purl:
        type: string
      releaseNotes:
        $ref: '#/definitions/cyclonedx.ReleaseNotes'
      scope:
        $ref: '#/definitions/cyclonedx.Scope'
      supplier:
        $ref: '#/definitions/cyclonedx.OrganizationalEntity'
      swhid:
        items:
          type: string
        type: array
      swid:
        $ref: '#/definitions/cyclonedx.SWID'
      type:
        $ref: '#/definitions/cyclonedx.ComponentType'
      version:
        type: string
    type: object
  cyclonedx.ComponentData:
    properties:
      bom-ref:
        type: string
      classification:
        type: string
      contents:
        $ref: '#/definitions/cyclonedx.ComponentDataContents'
      description:
        type: string
      governance:
        $ref: '#/definitions/cyclonedx.DataGovernance'
      graphics:
        $ref: '#/definitions/cyclonedx.ComponentDataGraphics'
      name:
        type: string
      sensitiveData:
        items:
          type: string
        type: array
      type:
        $ref: '#/definitions/cyclonedx.ComponentDataType'
    type: object
  cyclonedx.ComponentDataContents:
    properties:
      attachment:
        $ref: '#/definitions/cyclonedx.AttachedText'
      properties:
        items:
          $ref: '#/definitions/cyclonedx.Property'
        type: array
      url:
        type: string
    type: object
  cyclonedx.ComponentDataGovernanceResponsibleParty:
    properties:
      contact:
        $ref: '#/definitions/cyclonedx.OrganizationalContact'
      organization:
        $ref: '#/definitions/cyclonedx.OrganizationalEntity'
    type: object
  cyclonedx.ComponentDataGraphic:
    properties:
      image:
        $ref: '#/definitions/cyclonedx.AttachedText'
      name:
        type: string
    type: object
  cyclonedx.ComponentDataGraphics:
    properties:
      collection:
        items:
          $ref: '#/definitions/cyclonedx.ComponentDataGraphic'
        type: array
      description:
        type: string
    type: object
  cyclonedx.ComponentDataType:
    enum:
    - configuration
    - dataset
    - definition
    - other
    - source-code
    type: string
    x-enum-varnames:
    - ComponentDataTypeConfiguration
    - ComponentDataTypeDataset
    - ComponentDataTypeDefinition
    - ComponentDataTypeOther
    - ComponentDataTypeSourceCode
  cyclonedx.ComponentType:
    enum:
    - application
    - container
    - cryptographic-asset
    - data
    - device
    - device-driver
    - file
    - firmware
    - framework
    - library
    - machine-learning-model
    - operating-system
    - platform
    type: string
    x-enum-varnames:
    - ComponentTypeApplication
    - ComponentTypeContainer
    - ComponentTypeCryptographicAsset
    - ComponentTypeData
    - ComponentTypeDevice
    - ComponentTypeDeviceDriver
    - ComponentTypeFile
    - ComponentTypeFirmware
    - ComponentTypeFramework
    - ComponentTypeLibrary
    - ComponentTypeMachineLearningModel
    - ComponentTypeOS
    - ComponentTypePlatform
  cyclonedx.Composition:
    properties:
      aggregate:
        $ref: '#/definitions/cyclonedx.CompositionAggregate'
      assemblies:
        items:
          type: string
        type: array
      bom-ref:
        type: string
      dependencies:
        items:
          type: string
        type: array
      vulnerabilities:
        items:
          type: string
        type: array
    type: object
  cyclonedx.CompositionAggregate:
    enum:
    - complete
    - incomplete
    - incomplete_first_party_only
    - incomplete_first_party_opensource_only
    - incomplete_first_party_proprietary_only
    - incomplete_third_party_only
    - incomplete_third_party_opensource_only
    - incomplete_third_party_proprietary_only
    - not_specified
    - unknown
    type: string
    x-enum-varnames:
    - CompositionAggregateComplete
    - CompositionAggregateIncomplete
    - CompositionAggregateIncompleteFirstPartyOnly
    - CompositionAggregateIncompleteFirstPartyOpenSourceOnly
    - CompositionAggregateIncompleteFirstPartyProprietaryOnly
    - CompositionAggregateIncompleteThirdPartyOnly
    - CompositionAggregateIncompleteThirdPartyOpenSourceOnly
    - CompositionAggregateIncompleteThirdPartyProprietaryOnly
    - CompositionAggregateNotSpecified
    - CompositionAggregateUnknown
  cyclonedx.Copyright:
    properties:
      text:
        type: string
    type: object
  cyclonedx.Credits:
    properties:
      individuals:
        items:
          $ref: '#/definitions/cyclonedx.OrganizationalContact'
        type: array
      organizations:
        items:
          $ref: '#/definitions/cyclonedx.OrganizationalEntity'
        type: array
    type: object
  cyclonedx.CryptoAlgorithmMode:
    enum:
    - cbc
    - ecb
    - ccm
    - gcm
    - cfb
    - ofb
    - ctr
    - other
    - unknown
    type: string
    x-enum-varnames:
    - CryptoAlgorithmModeCBC
    - CryptoAlgorithmModeECB
    - CryptoAlgorithmModeCCM
    - CryptoAlgorithmModeGCM
    - CryptoAlgorithmModeCFB
    - CryptoAlgorithmModeOFB
    - CryptoAlgorithmModeCTR
    - CryptoAlgorithmModeOther
    - CryptoAlgorithmModeUnknown
  cyclonedx.CryptoAlgorithmProperties:
    properties:
      certificationLevel:
        items:
          $ref: '#/definitions/cyclonedx.CryptoCertificationLevel'
        type: array
      classicalSecurityLevel:
        type: integer
      cryptoFunctions:
        items:
          $ref: '#/definitions/cyclonedx.CryptoFunction'
        type: array
      curve:
        type: string
      executionEnvironment:
        $ref: '#/definitions/cyclonedx.CryptoExecutionEnvironment'
      implementationPlatform:
        $ref: '#/definitions/cyclonedx.ImplementationPlatform'
      mode:
        $ref: '#/definitions/cyclonedx.CryptoAlgorithmMode'
      nistQuantumSecurityLevel:
        type: integer
      padding:
        $ref: '#/definitions/cyclonedx.CryptoPadding'
      parameterSetIdentifier:
        type: string
      primitive:
        $ref: '#/definitions/cyclonedx.CryptoPrimitive'
    type: object
  cyclonedx.CryptoAssetType:
    enum:
    - algorithm
    - certificate
    - protocol
    - related-crypto-material
    type: string
    x-enum-varnames:
    - CryptoAssetTypeAlgorithm
    - CryptoAssetTypeCertificate
    - CryptoAssetTypeProtocol
    - CryptoAssetTypeRelatedCryptoMaterial
  cyclonedx.CryptoCertificationLevel:
    enum:
    - none
    - fips140-1-l1
    - fips140-1-l2
    - fips140-1-l3
    - fips140-1-l4
    - fips140-2-l1
    - fips140-2-l2
    - fips140-2-l3
    - fips140-2-l4
    - fips140-3-l1
    - fips140-3-l2
    - fips140-3-l3
    - fips140-3-l4
    - cc-eal1
    - cc-eal1+
    - cc-eal2
    - cc-eal2+
    - cc-eal3
    - cc-eal3+
    - cc-eal4
    - cc-eal4+
    - cc-eal5
    - cc-eal5+
    - cc-eal6
    - cc-eal6+
    - cc-eal7
    - cc-eal7+
    - other
    - unknown
    type: string
    x-enum-varnames:
    - CryptoCertificationLevelNone
    - CryptoCertificationLevelFIPS140_1_L1
    - CryptoCertificationLevelFIPS140_1_L2
    - CryptoCertificationLevelFIPS140_1_L3
    - CryptoCertificationLevelFIPS140_1_L4
    - CryptoCertificationLevelFIPS140_2_L1
    - CryptoCertificationLevelFIPS140_2_L2
    - CryptoCertificationLevelFIPS140_2_L3
    - CryptoCertificationLevelFIPS140_2_L4
    - CryptoCertificationLevelFIPS140_3_L1
    - CryptoCertificationLevelFIPS140_3_L2
    - CryptoCertificationLevelFIPS140_3_L3
    - CryptoCertificationLevelFIPS140_3_L4
    - CryptoCertificationLevelCCEAL1
    - CryptoCertificationLevelCCEAL1Plus
    - CryptoCertificationLevelCCEAL2
    - CryptoCertificationLevelCCEAL2Plus
    - CryptoCertificationLevelCCEAL3
    - CryptoCertificationLevelCCEAL3Plus
    - CryptoCertificationLevelCCEAL4
    - CryptoCertificationLevelCCEAL4Plus
    - CryptoCertificationLevelCCEAL5
    - CryptoCertificationLevelCCEAL5Plus
    - CryptoCertificationLevelCCEAL6
    - CryptoCertificationLevelCCEAL6Plus
    - CryptoCertificationLevelCCEAL7
    - CryptoCertificationLevelCCEAL7Plus
    - CryptoCertificationLevelOther
    - CryptoCertificationLevelUnknown
  cyclonedx.CryptoExecutionEnvironment:
    enum:
    - software-plain-ram
    - software-encrypted-ram
    - software-tee
    - hardware
    - other
    - unknown
    type: string
    x-enum-varnames:
    - CryptoExecutionEnvironmentSoftwarePlainRAM
    - CryptoExecutionEnvironmentSoftwareEncryptedRAM
    - CryptoExecutionEnvironmentSoftwareTEE
    - CryptoExecutionEnvironmentHardware
    - CryptoExecutionEnvironmentOther
    - CryptoExecutionEnvironmentUnknown
  cyclonedx.CryptoFunction:
    enum:
    - generate
    - keygen
    - encrypt
    - decrypt
    - digest
    - tag
    - keyderive
    - sign
    - verify
    - encapsulate
    - decapsulate
    - other
    - unknown
    type: string
    x-enum-varnames:
    - CryptoFunctionGenerate
    - CryptoFunctionKeygen
    - CryptoFunctionEncrypt
    - CryptoFunctionDecrypt
    - CryptoFunctionDigest
    - CryptoFunctionTag
    - CryptoFunctionKeyderive
    - CryptoFunctionSign
    - CryptoFunctionVerify
    - CryptoFunctionEncapsulate
    - CryptoFunctionDecapsulate
    - CryptoFunctionOther
    - CryptoFunctionUnknown
  cyclonedx.CryptoKeyState:
    enum:
    - pre-activation
    - active
    - suspended
    - deactivated
    - compromised
    - destroyed
    type: string
    x-enum-varnames:
    - CryptoKeyStatePreActivation
    - CryptoKeyStateActive
    - CryptoKeyStateSuspended
    - CryptoKeyStateDeactivated
    - CryptoKeyStateCompromised
    - CryptoKeyStateDestroyed
  cyclonedx.CryptoPadding:
    enum:
    - pkcs5
    - pkcs7
    - pkcs1v15
    - oaep
    - raw
    - other
    - unknown
    type: string
    x-enum-varnames:
    - CryptoPaddingPKCS5
    - CryptoPaddingPKCS7
    - CryptoPaddingPKCS1v15
    - CryptoPaddingOAEP
    - CryptoPaddingRaw
    - CryptoPaddingOther
    - CryptoPaddingUnknown
  cyclonedx.CryptoPrimitive:
    enum:
    - drbg
    - mac
    - block-cipher
    - stream-cipher
    - signature
    - hash
    - pke
    - xof
    - kdf
    - key-agree
    - kem
    - ae
    - combiner
    - other
    - unknown
    type: string
    x-enum-varnames:
    - CryptoPrimitiveDRBG
    - CryptoPrimitiveMAC
    - CryptoPrimitiveBlockCipher
    - CryptoPrimitiveStreamCipher
    - CryptoPrimitiveSignature
    - CryptoPrimitiveHash
    - CryptoPrimitivePKE
    - CryptoPrimitiveXOF
    - CryptoPrimitiveKDF
    - CryptoPrimitiveKeyAgree
    - CryptoPrimitiveKEM
    - CryptoPrimitiveAE
    - CryptoPrimitiveCombiner
    - CryptoPrimitiveOther
    - CryptoPrimitiveUnknown
  cyclonedx.CryptoProperties:
    properties:
      algorithmProperties:
        $ref: '#/definitions/cyclonedx.CryptoAlgorithmProperties'
      assetType:
        $ref: '#/definitions/cyclonedx.CryptoAssetType'
      certificateProperties:
        $ref: '#/definitions/cyclonedx.CertificateProperties'
      oid:
        type: string
      protocolProperties:
        $ref: '#/definitions/cyclonedx.CryptoProtocolProperties'
      relatedCryptoMaterialProperties:
        $ref: '#/definitions/cyclonedx.RelatedCryptoMaterialProperties'
    type: object
  cyclonedx.CryptoProtocolProperties:
    properties:
      cipherSuites:
        items:
          $ref: '#/definitions/cyclonedx.CipherSuite'
        type: array
      cryptoRefArray:
        items:
          type: string
        type: array
      ikev2TransformTypes:
        $ref: '#/definitions/cyclonedx.IKEv2TransformTypes'
      type:
        $ref: '#/definitions/cyclonedx.CryptoProtocolType'
      version:
        type: string
    type: object
  cyclonedx.CryptoProtocolType:
    enum:
    - tls
    - ssh
    - ipsec
    - ike
    - sstp
    - wpa
    - other
    - unknown
    type: string
    x-enum-varnames:
    - CryptoProtocolTypeTLS
    - CryptoProtocolTypeSSH
    - CryptoProtocolTypeIPSec
    - CryptoProtocolTypeIKE
    - CryptoProtocolTypeSSTP
    - CryptoProtocolTypeWPA
    - CryptoProtocolTypeOther
    - CryptoProtocolTypeUnknown
  cyclonedx.DataClassification:
    properties:
      classification:
        type: string
      flow:
        $ref: '#/definitions/cyclonedx.DataFlow'
    type: object
  cyclonedx.DataFlow:
    enum:
    - bi-directional
    - inbound
    - outbound
    - unknown
    type: string
    x-enum-varnames:
    - DataFlowBidirectional
    - DataFlowInbound
    - DataFlowOutbound
    - DataFlowUnknown
  cyclonedx.DataGovernance:
    properties:
      custodians:
        items:
          $ref: '#/definitions/cyclonedx.ComponentDataGovernanceResponsibleParty'
        type: array
      owners:
        items:
          $ref: '#/definitions/cyclonedx.ComponentDataGovernanceResponsibleParty'
        type: array
      stewards:
        items:
          $ref: '#/definitions/cyclonedx.ComponentDataGovernanceResponsibleParty'
        type: array
    type: object
  cyclonedx.DeclarationEvidence:
    properties:
      author:
        $ref: '#/definitions/cyclonedx.OrganizationalContact'
      bom-ref:
        type: string
      created:
        type: string
      data:
        items:
          $ref: '#/definitions/cyclonedx.EvidenceData'
        type: array
      description:
        type: string
      expires:
        type: string
      propertyName:
        type: string
      reviewer:
        $ref: '#/definitions/cyclonedx.OrganizationalContact'
      signature:
        $ref: '#/definitions/cyclonedx.JSFSignature'
    type: object
  cyclonedx.Declarations:
    properties:
      affirmation:
        $ref: '#/definitions/cyclonedx.Affirmation'
      assessors:
        items:
          $ref: '#/definitions/cyclonedx.Assessor'
        type: array
      attestations:
        items:
          $ref: '#/definitions/cyclonedx.Attestation'
        type: array
      claims:
        items:
          $ref: '#/definitions/cyclonedx.Claim'
        type: array
      evidence:
        items:
          $ref: '#/definitions/cyclonedx.DeclarationEvidence'
        type: array
      signature:
        $ref: '#/definitions/cyclonedx.JSFSignature'
      targets:
        $ref: '#/definitions/cyclonedx.Targets'
    type: object
  cyclonedx.Definitions:
    properties:
      standards:
        items:
          $ref: '#/definitions/cyclonedx.StandardDefinition'
        type: array
    type: object
  cyclonedx.Dependency:
    properties:
      dependsOn:
        items:
          type: string
        type: array
      ref:
        type: string
    type: object
  cyclonedx.Diff:
    properties:
      text:
        $ref: '#/definitions/cyclonedx.AttachedText'
      url:
        type: string
    type: object
  cyclonedx.EnvironmentVariableChoice:
    type: object
  cyclonedx.Event:
    properties:
      data:
        $ref: '#/definitions/cyclonedx.AttachedText'
      description:
        type: string
      properties:
        items:
          $ref: '#/definitions/cyclonedx.Property'
        type: array
      source:
        $ref: '#/definitions/cyclonedx.ResourceReferenceChoice'
      target:
        $ref: '#/definitions/cyclonedx.ResourceReferenceChoice'
      timeReceived:
        type: string
      uid:
        type: string
    type: object
  cyclonedx.Evidence:
    properties:
      callstack:
        $ref: '#/definitions/cyclonedx.Callstack'
      copyright:
        items:
          $ref: '#/definitions/cyclonedx.Copyright'
        type: array
      identity:
        $ref: '#/definitions/cyclonedx.EvidenceIdentity'
      licenses:
        items:
          $ref: '#/definitions/cyclonedx.LicenseChoice'
        type: array
      occurrences:
        items:
          $ref: '#/definitions/cyclonedx.EvidenceOccurrence'
        type: array
    type: object
  cyclonedx.EvidenceData:
    properties:
      classification:
        $ref: '#/definitions/cyclonedx.DataClassification'
      contents:
        $ref: '#/definitions/cyclonedx.EvidenceDataContents'
      governance:
        $ref: '#/definitions/cyclonedx.DataGovernance'
      name:
        type: string
      sensitiveData:
        items:
          type: string
        type: array
    type: object
  cyclonedx.EvidenceDataContents:
    properties:
      attachment:
        $ref: '#/definitions/cyclonedx.AttachedText'
      url:
        type: string
    type: object
  cyclonedx.EvidenceIdentity:
    properties:
      confidence:
        type: number
      field:
        $ref: '#/definitions/cyclonedx.EvidenceIdentityFieldType'
      methods:
        items:
          $ref: '#/definitions/cyclonedx.EvidenceIdentityMethod'
        type: array
      tools:
        items:
          type: string
        type: array
    type: object
  cyclonedx.EvidenceIdentityFieldType:
    enum:
    - cpe
    - group
    - hash
    - name
    - purl
    - omniborId
    - swhid
    - swid
    - version
    type: string
    x-enum-varnames:
    - EvidenceIdentityFieldTypeCPE
    - EvidenceIdentityFieldTypeGroup
    - EvidenceIdentityFieldTypeHash
    - EvidenceIdentityFieldTypeName
    - EvidenceIdentityFieldTypePURL
    - EvidenceIdentityFieldTypeOmniborID
    - EvidenceIdentityFieldTypeSWHID
    - EvidenceIdentityFieldTypeSWID
    - EvidenceIdentityFieldTypeVersion
  cyclonedx.EvidenceIdentityMethod:
    properties:
      confidence:
        type: number
      technique:
        $ref: '#/definitions/cyclonedx.EvidenceIdentityTechnique'
      value:
        type: string
    type: object
  cyclonedx.EvidenceIdentityTechnique:
    enum:
    - ast-fingerprint
    - attestation
    - binary-analysis
    - dynamic-analysis
    - filename
    - hash-comparison
    - instrumentation
    - manifest-analysis
    - other
    - source-code-analysis
    type: string
    x-enum-varnames:
    - EvidenceIdentityTechniqueASTFingerprint
    - EvidenceIdentityTechniqueAttestation
    - EvidenceIdentityTechniqueBinaryAnalysis
    - EvidenceIdentityTechniqueDynamicAnalysis
    - EvidenceIdentityTechniqueFilename
    - EvidenceIdentityTechniqueHashComparison
    - EvidenceIdentityTechniqueInstrumentation
    - EvidenceIdentityTechniqueManifestAnalysis
    - EvidenceIdentityTechniqueOther
    - EvidenceIdentityTechniqueSourceCodeAnalysis
  cyclonedx.EvidenceOccurrence:
    properties:
      additionalContext:
        type: string
      bom-ref:
        type: string
      line:
        type: integer
      location:
        type: string
      offset:
        type: integer
      symbol:
        type: string
    type: object
  cyclonedx.ExternalReference:
    properties:
      comment:
        type: string
      hashes:
        items:
          $ref: '#/definitions/cyclonedx.Hash'
        type: array
      type:
        $ref: '#/definitions/cyclonedx.ExternalReferenceType'
      url:
        type: string
    type: object
  cyclonedx.ExternalReferenceType:
    enum:
    - adversary-model
    - advisories
    - attestation
    - bom
    - build-meta
    - build-system
    - certification-report
    - chat
    - configuration
    - codified-infrastructure
    - component-analysis-report
    - distribution
    - distribution-intake
    - documentation
    - dynamic-analysis-report
    - evidence
    - exploitability-statement
    - formulation
    - issue-tracker
    - license
    - log
    - mailing-list
    - maturity-report
    - model-card
    - other
    - pentest-report
    - quality-metrics
    - release-notes
    - risk-assessment
    - runtime-analysis-report
    - security-contact
    - social
    - static-analysis-report
    - support
    - threat-model
    - vcs
    - vulnerability-assertion
    - website
    type: string
    x-enum-varnames:
    - ERTypeAdversaryModel
    - ERTypeAdvisories
    - ERTypeAttestation
    - ERTypeBOM
    - ERTypeBuildMeta
    - ERTypeBuildSystem
    - ERTypeCertificationReport
    - ERTypeChat
    - ERTypeConfiguration
    - ERTypeCodifiedInfrastructure
    - ERTypeComponentAnalysisReport
    - ERTypeDistribution
    - ERTypeDistributionIntake
    - ERTypeDocumentation
    - ERTypeDynamicAnalysisReport
    - ERTypeEvidence
    - ERTypeExploitabilityStatement
    - ERTypeFormulation
    - ERTypeIssueTracker
    - ERTypeLicense
    - ERTypeLog
    - ERTypeMailingList
    - ERTypeMaturityReport
    - ERTypeModelCard
    - ERTypeOther
    - ERTypePentestReport
    - ERTypeQualityMetrics
    - ERTypeReleaseNotes
    - ERTypeRiskAssessment
    - ERTypeRuntimeAnalysisReport
    - ERTypeSecurityContact
    - ERTypeSocial
    - ERTypeStaticAnalysisReport
    - ERTypeSupport
    - ERTypeThreatModel
    - ERTypeVCS
    - ERTypeVulnerabilityAssertion
    - ERTypeWebsite
  cyclonedx.Formula:
    properties:
      bom-ref:
        type: string
      components:
        items:
          $ref: '#/definitions/cyclonedx.Component'
        type: array
      properties:
        items:
          $ref: '#/definitions/cyclonedx.Property'
        type: array
      services:
        items:
          $ref: '#/definitions/cyclonedx.Service'
        type: array
      workflows:
        items:
          $ref: '#/definitions/cyclonedx.Workflow'
        type: array
    type: object
  cyclonedx.Hash:
    properties:
      alg:
        $ref: '#/definitions/cyclonedx.HashAlgorithm'
      content:
        type: string
    type: object
  cyclonedx.HashAlgorithm:
    enum:
    - MD5
    - SHA-1
    - SHA-256
    - SHA-384
    - SHA-512
    - SHA3-256
    - SHA3-384
    - SHA3-512
    - BLAKE2b-256
    - BLAKE2b-384
    - BLAKE2b-512
    - BLAKE3
    type: string
    x-enum-varnames:
    - HashAlgoMD5
    - HashAlgoSHA1
    - HashAlgoSHA256
    - HashAlgoSHA384
    - HashAlgoSHA512
    - HashAlgoSHA3_256
    - HashAlgoSHA3_384
    - HashAlgoSHA3_512
    - HashAlgoBlake2b_256
    - HashAlgoBlake2b_384
    - HashAlgoBlake2b_512
    - HashAlgoBlake3
  cyclonedx.IKEv2TransformTypes:
    properties:
      auth:
        items:
          type: string
        type: array
      encr:
        items:
          type: string
        type: array
      esn:
        type: boolean
      integ:
        items:
          type: string
        type: array
      ke:
        items:
          type: string
        type: array
      prf:
        items:
          type: string
        type: array
    type: object
  cyclonedx.IdentifiableAction:
    properties:
      email:
        type: string
      name:
        type: string
      timestamp:
        type: string
    type: object
  cyclonedx.ImpactAnalysisJustification:
    enum:
    - code_not_present
    - code_not_reachable
    - requires_configuration
    - requires_dependency
    - requires_environment
    - protected_by_compiler
    - protected_at_runtime
    - protected_at_perimeter
    - protected_by_mitigating_control
    type: string
    x-enum-varnames:
    - IAJCodeNotPresent
    - IAJCodeNotReachable
    - IAJRequiresConfiguration
    - IAJRequiresDependency
    - IAJRequiresEnvironment
    - IAJProtectedByCompiler
    - IAJProtectedAtRuntime
    - IAJProtectedAtPerimeter
    - IAJProtectedByMitigatingControl
  cyclonedx.ImpactAnalysisResponse:
    enum:
    - can_not_fix
    - will_not_fix
    - update
    - rollback
    - workaround_available
    type: string
    x-enum-varnames:
    - IARCanNotFix
    - IARWillNotFix
    - IARUpdate
    - IARRollback
    - IARWorkaroundAvailable
  cyclonedx.ImpactAnalysisState:
    enum:
    - resolved
    - resolved_with_pedigree
    - exploitable
    - in_triage
    - false_positive
    - not_affected
    type: string
    x-enum-varnames:
    - IASResolved
    - IASResolvedWithPedigree
    - IASExploitable
    - IASInTriage
    - IASFalsePositive
    - IASNotAffected
  cyclonedx.ImplementationPlatform:
    enum:
    - generic
    - x86_32
    - x86_64
    - armv7-a
    - armv7-m
    - armv8-a
    - armv8-m
    - armv9-a
    - armv9-m
    - s390x
    - ppc64
    - ppc64le
    - other
    - unknown
    type: string
    x-enum-varnames:
    - ImplementationPlatformGeneric
    - ImplementationPlatformX86_32
    - ImplementationPlatformX86_64
    - ImplementationPlatformARMv7A
    - ImplementationPlatformARMv7M
    - ImplementationPlatformARMv8A
    - ImplementationPlatformARMv8M
    - ImplementationPlatformARMv9A
    - ImplementationPlatformARMv9M
    - ImplementationPlatformS390x
    - ImplementationPlatformPPC64
    - ImplementationPlatformPPC64LE
    - ImplementationPlatformOther
    - ImplementationPlatformUnknown
  cyclonedx.Issue:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
      references:
        items:
          type: string
        type: array
      source:
        $ref: '#/definitions/cyclonedx.Source'
      type:
        $ref: '#/definitions/cyclonedx.IssueType'
    type: object
  cyclonedx.IssueType:
    enum:
    - defect
    - enhancement
    - security
    type: string
    x-enum-varnames:
    - IssueTypeDefect
    - IssueTypeEnhancement
    - IssueTypeSecurity
  cyclonedx.JSFPublicKey:
    properties:
      crv:
        type: string
      e:
        type: string
      kty:
        type: string
      "n":
        type: string
      x:
        type: string
      "y":
        type: string
    type: object
  cyclonedx.JSFSignature:
    properties:
      chain:
        items:
          $ref: '#/definitions/cyclonedx.JSFSigner'
        type: array
      signers:
        items:
          $ref: '#/definitions/cyclonedx.JSFSigner'
        type: array
    type: object
  cyclonedx.JSFSigner:
    properties:
      algorithm:
        type: string
      certificatePath:
        items:
          type: string
        type: array
      excludes:
        items:
          type: string
        type: array
      keyId:
        type: string
      publicKey:
        $ref: '#/definitions/cyclonedx.JSFPublicKey'
      value:
        type: string
    type: object
  cyclonedx.License:
    properties:
      acknowledgement:
        $ref: '#/definitions/cyclonedx.LicenseAcknowledgement'
      bom-ref:
        type: string
      id:
        type: string
      licensing:
        $ref: '#/definitions/cyclonedx.Licensing'
      name:
        type: string
      properties:
        items:
          $ref: '#/definitions/cyclonedx.Property'
        type: array
      text:
        $ref: '#/definitions/cyclonedx.AttachedText'
      url:
        type: string
    type: object
  cyclonedx.LicenseAcknowledgement:
    enum:
    - declared
    - concluded
    type: string
    x-enum-varnames:
    - LicenseAcknowledgementDeclared
    - LicenseAcknowledgementConcluded
  cyclonedx.LicenseChoice:
    properties:
      expression:
        type: string
      license:
        $ref: '#/definitions/cyclonedx.License'
    type: object
  cyclonedx.LicenseType:
    enum:
    - academic
    - appliance
    - client-access
    - concurrent-user
    - core-points
    - custom-metric
    - device
    - evaluation
    - named-user
    - node-locked
    - oem
    - other
    - perpetual
    - processor-points
    - subscription
    - user
    type: string
    x-enum-varnames:
    - LicenseTypeAcademic
    - LicenseTypeAppliance
    - LicenseTypeClientAccess
    - LicenseTypeConcurrentUser
    - LicenseTypeCorePoints
    - LicenseTypeCustomMetric
    - LicenseTypeDevice
    - LicenseTypeEvaluation
    - LicenseTypeNamedUser
    - LicenseTypeNodeLocked
    - LicenseTypeOEM
    - LicenseTypeOther
    - LicenseTypePerpetual
    - LicenseTypeProcessorPoints
    - LicenseTypeSubscription
    - LicenseTypeUser
  cyclonedx.Licensing:
    properties:
      altIds:
        items:
          type: string
        type: array
      expiration:
        type: string
      lastRenewal:
        type: string
      licenseTypes:
        items:
          $ref: '#/definitions/cyclonedx.LicenseType'
        type: array
      licensee:
        $ref: '#/definitions/cyclonedx.OrganizationalEntityOrContact'
      licensor:
        $ref: '#/definitions/cyclonedx.OrganizationalEntityOrContact'
      purchaseOrder:
        type: string
      purchaser:
        $ref: '#/definitions/cyclonedx.OrganizationalEntityOrContact'
    type: object
  cyclonedx.Lifecycle:
    properties:
      description:
        type: string
      name:
        type: string
      phase:
        $ref: '#/definitions/cyclonedx.LifecyclePhase'
    type: object
  cyclonedx.LifecyclePhase:
    enum:
    - build
    - decommission
    - design
    - discovery
    - operations
    - post-build
    - pre-build
    type: string
    x-enum-varnames:
    - LifecyclePhaseBuild
    - LifecyclePhaseDecommission
    - LifecyclePhaseDesign
    - LifecyclePhaseDiscovery
    - LifecyclePhaseOperations
    - LifecyclePhasePostBuild
    - LifecyclePhasePreBuild
  cyclonedx.MLDatasetChoice:
    type: object
  cyclonedx.MLInputOutputParameters:
    properties:
      format:
        type: string
    type: object
  cyclonedx.MLModelCO2Measure:
    properties:
      unit:
        $ref: '#/definitions/cyclonedx.MLModelCO2Unit'
      value:
        type: number
    type: object
  cyclonedx.MLModelCO2Unit:
    enum:
    - tCO2eq
    type: string
    x-enum-varnames:
    - MLModelCO2UnitTCO2Eq
  cyclonedx.MLModelCard:
    properties:
      bom-ref:
        type: string
      considerations:
        $ref: '#/definitions/cyclonedx.MLModelCardConsiderations'
      modelParameters:
        $ref: '#/definitions/cyclonedx.MLModelParameters'
      quantitativeAnalysis:
        $ref: '#/definitions/cyclonedx.MLQuantitativeAnalysis'
    type: object
  cyclonedx.MLModelCardConsiderations:
    properties:
      environmentalConsiderations:
        $ref: '#/definitions/cyclonedx.MLModelCardEnvironmentalConsiderations'
      ethicalConsiderations:
        items:
          $ref: '#/definitions/cyclonedx.MLModelCardEthicalConsideration'
        type: array
      fairnessAssessments:
        items:
          $ref: '#/definitions/cyclonedx.MLModelCardFairnessAssessment'
        type: array
      performanceTradeoffs:
        items:
          type: string
        type: array
      technicalLimitations:
        items:
          type: string
        type: array
      useCases:
        items:
          type: string
        type: array
      users:
        items:
          type: string
        type: array
    type: object
  cyclonedx.MLModelCardEnvironmentalConsiderations:
    properties:
      energyConsumptions:
        items:
          $ref: '#/definitions/cyclonedx.MLModelEnergyConsumption'
        type: array
      properties:
        items:
          $ref: '#/definitions/cyclonedx.Property'
        type: array
    type: object
  cyclonedx.MLModelCardEthicalConsideration:
    properties:
      mitigationStrategy:
        type: string
      name:
        type: string
    type: object
  cyclonedx.MLModelCardFairnessAssessment:
    properties:
      benefits:
        type: string
      groupAtRisk:
        type: string
      harms:
        type: string
      mitigationStrategy:
        type: string
    type: object
  cyclonedx.MLModelEnergyConsumption:
    properties:
      activity:
        $ref: '#/definitions/cyclonedx.MLModelEnergyConsumptionActivity'
      activityEnergyCost:
        $ref: '#/definitions/cyclonedx.MLModelEnergyMeasure'
      co2CostEquivalent:
        $ref: '#/definitions/cyclonedx.MLModelCO2Measure'
      co2CostOffset:
        $ref: '#/definitions/cyclonedx.MLModelCO2Measure'
      energyProviders:
        items:
          $ref: '#/definitions/cyclonedx.MLModelEnergyProvider'
        type: array
      properties:
        items:
          $ref: '#/definitions/cyclonedx.Property'
        type: array
    type: object
  cyclonedx.MLModelEnergyConsumptionActivity:
    enum:
    - design
    - data-collection
    - data-preparation
    - training
    - fine-tuning
    - validation
    - deployment
    - inference
    - other
    type: string
    x-enum-varnames:
    - MLModelEnergyConsumptionActivityDesign
    - MLModelEnergyConsumptionActivityDataCollection
    - MLModelEnergyConsumptionActivityDataPreparation
    - MLModelEnergyConsumptionActivityTraining
    - MLModelEnergyConsumptionActivityFineTuning
    - MLModelEnergyConsumptionActivityValidation
    - MLModelEnergyConsumptionActivityDeployment
    - MLModelEnergyConsumptionActivityInference
    - MLModelEnergyConsumptionActivityOther
  cyclonedx.MLModelEnergyMeasure:
    properties:
      unit:
        $ref: '#/definitions/cyclonedx.MLModelEnergyUnit'
      value:
        type: number
    type: object
  cyclonedx.MLModelEnergyProvider:
    properties:
      bom-ref:
        type: string
      description:
        type: string
      energyProvided:
        $ref: '#/definitions/cyclonedx.MLModelEnergyMeasure'
      energySource:
        $ref: '#/definitions/cyclonedx.MLModelEnergySource'
      externalReferences:
        items:
          $ref: '#/definitions/cyclonedx.ExternalReference'
        type: array
      organization:
        $ref: '#/definitions/cyclonedx.OrganizationalEntity'
    type: object
  cyclonedx.MLModelEnergySource:
    enum:
    - coal
    - oil
    - natural-gas
    - nuclear
    - wind
    - solar
    - geothermal
    - hydropower
    - biofuel
    - unknown
    - other
    type: string
    x-enum-varnames:
    - MLModelEnergySourceCoal
    - MLModelEnergySourceOil
    - MLModelEnergySourceNaturalGas
    - MLModelEnergySourceNuclear
    - MLModelEnergySourceWind
    - MLModelEnergySourceSolar
    - MLModelEnergySourceGeothermal
    - MLModelEnergySourceHydropower
    - MLModelEnergySourceBiofuel
    - MLModelEnergySourceUnknown
    - MLModelEnergySourceOther
  cyclonedx.MLModelEnergyUnit:
    enum:
    - kWh
    type: string
    x-enum-varnames:
    - MLModelEnergyUnitKWH
  cyclonedx.MLModelParameters:
    properties:
      approach:
        $ref: '#/definitions/cyclonedx.MLModelParametersApproach'
      architectureFamily:
        type: string
      datasets:
        items:
          $ref: '#/definitions/cyclonedx.MLDatasetChoice'
        type: array
      inputs:
        items:
          $ref: '#/definitions/cyclonedx.MLInputOutputParameters'
        type: array
      modelArchitecture:
        type: string
      outputs:
        items:
          $ref: '#/definitions/cyclonedx.MLInputOutputParameters'
        type: array
      task:
        type: string
    type: object
  cyclonedx.MLModelParametersApproach:
    properties:
      type:
        $ref: '#/definitions/cyclonedx.MLModelParametersApproachType'
    type: object
  cyclonedx.MLModelParametersApproachType:
    enum:
    - supervised
    - unsupervised
    - reinforcement-learning
    - semi-supervised
    - self-supervised
    type: string
    x-enum-varnames:
    - MLModelParametersApproachTypeSupervised
    - MLModelParametersApproachTypeUnsupervised
    - MLModelParametersApproachTypeReinforcementLearning
    - MLModelParametersApproachTypeSemiSupervised
    - MLModelParametersApproachTypeSelfSupervised
  cyclonedx.MLPerformanceMetric:
    properties:
      confidenceInterval:
        $ref: '#/definitions/cyclonedx.MLPerformanceMetricConfidenceInterval'
      slice:
        type: string
      type:
        type: string
      value:
        type: string
    type: object
  cyclonedx.MLPerformanceMetricConfidenceInterval:
    properties:
      lowerBound:
        type: string
      upperBound:
        type: string
    type: object
  cyclonedx.MLQuantitativeAnalysis:
    properties:
      graphics:
        $ref: '#/definitions/cyclonedx.ComponentDataGraphics'
      performanceMetrics:
        items:
          $ref: '#/definitions/cyclonedx.MLPerformanceMetric'
        type: array
    type: object
  cyclonedx.Metadata:
    properties:
      authors:
        items:
          $ref: '#/definitions/cyclonedx.OrganizationalContact'
        type: array
      component:
        $ref: '#/definitions/cyclonedx.Component'
      licenses:
        items:
          $ref: '#/definitions/cyclonedx.LicenseChoice'
        type: array
      lifecycles:
        items:
          $ref: '#/definitions/cyclonedx.Lifecycle'
        type: array
      manufacture:
        allOf:
        - $ref: '#/definitions/cyclonedx.OrganizationalEntity'
        description: 'Deprecated: Use Component Manufacturer instead.'
      manufacturer:
        $ref: '#/definitions/cyclonedx.OrganizationalEntity'
      properties:
        items:
          $ref: '#/definitions/cyclonedx.Property'
        type: array
      supplier:
        $ref: '#/definitions/cyclonedx.OrganizationalEntity'
      timestamp:
        type: string
      tools:
        $ref: '#/definitions/cyclonedx.ToolsChoice'
    type: object
  cyclonedx.Note:
    properties:
      locale:
        type: string
      text:
        $ref: '#/definitions/cyclonedx.AttachedText'
    type: object
  cyclonedx.OrganizationalContact:
    properties:
      bom-ref:
        type: string
      email:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  cyclonedx.OrganizationalEntity:
    properties:
      address:
        $ref: '#/definitions/cyclonedx.PostalAddress'
      bom-ref:
        type: string
      contact:
        items:
          $ref: '#/definitions/cyclonedx.OrganizationalContact'
        type: array
      name:
        type: string
      url:
        items:
          type: string
        type: array
    type: object
  cyclonedx.OrganizationalEntityOrContact:
    properties:
      individual:
        $ref: '#/definitions/cyclonedx.OrganizationalContact'
      organization:
        $ref: '#/definitions/cyclonedx.OrganizationalEntity'
    type: object
  cyclonedx.Parameter:
    properties:
      dataType:
        type: string
      name:
        type: string
      value:
        type: string
    type: object
  cyclonedx.Patch:
    properties:
      diff:
        $ref: '#/definitions/cyclonedx.Diff'
      resolves:
        items:
          $ref: '#/definitions/cyclonedx.Issue'
        type: array
      type:
        $ref: '#/definitions/cyclonedx.PatchType'
    type: object
  cyclonedx.PatchType:
    enum:
    - backport
    - cherry-pick
    - monkey
    - unofficial
    type: string
    x-enum-varnames:
    - PatchTypeBackport
    - PatchTypeCherryPick
    - PatchTypeMonkey
    - PatchTypeUnofficial
  cyclonedx.Pedigree:
    properties:
      ancestors:
        items:
          $ref: '#/definitions/cyclonedx.Component'
        type: array
      commits:
        items:
          $ref: '#/definitions/cyclonedx.Commit'
        type: array
      descendants:
        items:
          $ref: '#/definitions/cyclonedx.Component'
        type: array
      notes:
        type: string
      patches:
        items:
          $ref: '#/definitions/cyclonedx.Patch'
        type: array
      variants:
        items:
          $ref: '#/definitions/cyclonedx.Component'
        type: array
    type: object
  cyclonedx.PostalAddress:
    properties:
      bom-ref:
        type: string
      country:
        type: string
      locality:
        type: string
      postOfficeBoxNumber:
        type: string
      postalCode:
        type: string
      region:
        type: string
      streetAddress:
        type: string
    type: object
  cyclonedx.ProofOfConcept:
    properties:
      environment:
        type: string
      reproductionSteps:
        type: string
      supportingMaterial:
        items:
          $ref: '#/definitions/cyclonedx.AttachedText'
        type: array
    type: object
  cyclonedx.Property:
    properties:
      name:
        type: string
      value:
        type: string
    type: object
  cyclonedx.RelatedCryptoMaterialProperties:
    properties:
      activationDate:
        type: string
      algorithmRef:
        type: string
      creationDate:
        type: string
      expirationDate:
        type: string
      format:
        type: string
      id:
        type: string
      securedBy:
        $ref: '#/definitions/cyclonedx.SecuredBy'
      size:
        type: integer
      state:
        $ref: '#/definitions/cyclonedx.CryptoKeyState'
      type:
        $ref: '#/definitions/cyclonedx.RelatedCryptoMaterialType'
      updateDate:
        type: string
      value:
        type: string
    type: object
  cyclonedx.RelatedCryptoMaterialType:
    enum:
    - private-key
    - public-key
    - secret-key
    - key
    - ciphertext
    - signature
    - digest
    - initialization-vector
    - nonce
    - seed
    - salt
    - shared-secret
    - tag
    - additional-data
    - password
    - credential
    - token
    - other
    - unknown
    type: string
    x-enum-varnames:
    - RelatedCryptoMaterialTypePrivateKey
    - RelatedCryptoMaterialTypePublicKey
    - RelatedCryptoMaterialTypeSecretKey
    - RelatedCryptoMaterialTypeKey
    - RelatedCryptoMaterialTypeCiphertext
    - RelatedCryptoMaterialTypeSignature
    - RelatedCryptoMaterialTypeDigest
    - RelatedCryptoMaterialTypeInitializationVector
    - RelatedCryptoMaterialTypeNonce
    - RelatedCryptoMaterialTypeSeed
    - RelatedCryptoMaterialTypeSalt
    - RelatedCryptoMaterialTypeSharedSecret
    - RelatedCryptoMaterialTypeTag
    - RelatedCryptoMaterialTypeAdditionalData
    - RelatedCryptoMaterialTypePassword
    - RelatedCryptoMaterialTypeCredential
    - RelatedCryptoMaterialTypeToken
    - RelatedCryptoMaterialTypeOther
    - RelatedCryptoMaterialTypeUnknown
  cyclonedx.ReleaseNotes:
    properties:
      aliases:
        items:
          type: string
        type: array
      description:
        type: string
      featuredImage:
        type: string
      notes:
        items:
          $ref: '#/definitions/cyclonedx.Note'
        type: array
      properties:
        items:
          $ref: '#/definitions/cyclonedx.Property'
        type: array
      resolves:
        items:
          $ref: '#/definitions/cyclonedx.Issue'
        type: array
      socialImage:
        type: string
      tags:
        items:
          type: string
        type: array
      timestamp:
        type: string
      title:
        type: string
      type:
        type: string
    type: object
  cyclonedx.ResourceReferenceChoice:
    properties:
      externalReference:
        $ref: '#/definitions/cyclonedx.ExternalReference'
      ref:
        type: string
    type: object
  cyclonedx.SWID:
    properties:
      name:
        type: string
      patch:
        type: boolean
      tagId:
        type: string
      tagVersion:
        type: integer
      text:
        $ref: '#/definitions/cyclonedx.AttachedText'
      url:
        type: string
      version:
        type: string
    type: object
  cyclonedx.Scope:
    enum:
    - excluded
    - optional
    - required
    type: string
    x-enum-varnames:
    - ScopeExcluded
    - ScopeOptional
    - ScopeRequired
  cyclonedx.ScoringMethod:
    enum:
    - other
    - CVSSv2
    - CVSSv3
    - CVSSv31
    - CVSSv4
    - OWASP
    - SSVC
    type: string
    x-enum-varnames:
    - ScoringMethodOther
    - ScoringMethodCVSSv2
    - ScoringMethodCVSSv3
    - ScoringMethodCVSSv31
    - ScoringMethodCVSSv4
    - ScoringMethodOWASP
    - ScoringMethodSSVC
  cyclonedx.SecuredBy:
    properties:
      algorithmRef:
        type: string
      mechanism:
        type: string
    type: object
  cyclonedx.Service:
    properties:
      authenticated:
        type: boolean
      bom-ref:
        type: string
      data:
        items:
          $ref: '#/definitions/cyclonedx.DataClassification'
        type: array
      description:
        type: string
      endpoints:
        items:
          type: string
        type: array
      externalReferences:
        items:
          $ref: '#/definitions/cyclonedx.ExternalReference'
        type: array
      group:
        type: string
      licenses:
        items:
          $ref: '#/definitions/cyclonedx.LicenseChoice'
        type: array
      name:
        type: string
      properties:
        items:
          $ref: '#/definitions/cyclonedx.Property'
        type: array
      provider:
        $ref: '#/definitions/cyclonedx.OrganizationalEntity'
      releaseNotes:
        $ref: '#/definitions/cyclonedx.ReleaseNotes'
      services:
        items:
          $ref: '#/definitions/cyclonedx.Service'
        type: array
      version:
        type: string
      x-trust-boundary:
        type: boolean
    type: object
  cyclonedx.Severity:
    enum:
    - unknown
    - none
    - info
    - low
    - medium
    - high
    - critical
    type: string
    x-enum-varnames:
    - SeverityUnknown
    - SeverityNone
    - SeverityInfo
    - SeverityLow
    - SeverityMedium
    - SeverityHigh
    - SeverityCritical
  cyclonedx.Signatory:
    properties:
      externalReference:
        $ref: '#/definitions/cyclonedx.ExternalReference'
      name:
        type: string
      organization:
        $ref: '#/definitions/cyclonedx.OrganizationalEntity'
      role:
        type: string
      signature:
        $ref: '#/definitions/cyclonedx.JSFSignature'
    type: object
  cyclonedx.Source:
    properties:
      name:
        type: string
      url:
        type: string
    type: object
  cyclonedx.SpecVersion:
    enum:
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    type: integer
    x-enum-comments:
      SpecVersion1_0: "1.0"
      SpecVersion1_1: "1.1"
      SpecVersion1_2: "1.2"
      SpecVersion1_3: "1.3"
      SpecVersion1_4: "1.4"
      SpecVersion1_5: "1.5"
      SpecVersion1_6: "1.6"
    x-enum-varnames:
    - SpecVersion1_0
    - SpecVersion1_1
    - SpecVersion1_2
    - SpecVersion1_3
    - SpecVersion1_4
    - SpecVersion1_5
    - SpecVersion1_6
  cyclonedx.StandardDefinition:
    properties:
      bom-ref:
        type: string
      description:
        type: string
      externalReferences:
        items:
          $ref: '#/definitions/cyclonedx.ExternalReference'
        type: array
      levels:
        items:
          $ref: '#/definitions/cyclonedx.StandardLevel'
        type: array
      name:
        type: string
      owner:
        type: string
      requirements:
        items:
          $ref: '#/definitions/cyclonedx.StandardRequirement'
        type: array
      signature:
        $ref: '#/definitions/cyclonedx.JSFSignature'
      version:
        type: string
    type: object
  cyclonedx.StandardLevel:
    properties:
      bom-ref:
        type: string
      description:
        type: string
      identifier:
        type: string
      requirements:
        items:
          type: string
        type: array
      title:
        type: string
    type: object
  cyclonedx.StandardRequirement:
    properties:
      bom-ref:
        type: string
      descriptions:
        items:
          type: string
        type: array
      externalReferences:
        items:
          $ref: '#/definitions/cyclonedx.ExternalReference'
        type: array
      identifier:
        type: string
      openCre:
        items:
          type: string
        type: array
      parent:
        type: string
      properties:
        items:
          $ref: '#/definitions/cyclonedx.Property'
        type: array
      text:
        type: string
      title:
        type: string
    type: object
  cyclonedx.Targets:
    properties:
      components:
        items:
          $ref: '#/definitions/cyclonedx.Component'
        type: array
      organizations:
        items:
          $ref: '#/definitions/cyclonedx.OrganizationalEntity'
        type: array
      services:
        items:
          $ref: '#/definitions/cyclonedx.Service'
        type: array
    type: object
  cyclonedx.Task:
    properties:
      bom-ref:
        type: string
      description:
        type: string
      inputs:
        items:
          $ref: '#/definitions/cyclonedx.TaskInput'
        type: array
      name:
        type: string
      outputs:
        items:
          $ref: '#/definitions/cyclonedx.TaskOutput'
        type: array
      properties:
        items:
          $ref: '#/definitions/cyclonedx.Property'
        type: array
      resourceReferences:
        items:
          $ref: '#/definitions/cyclonedx.ResourceReferenceChoice'
        type: array
      runtimeTopology:
        items:
          $ref: '#/definitions/cyclonedx.Dependency'
        type: array
      steps:
        items:
          $ref: '#/definitions/cyclonedx.TaskStep'
        type: array
      taskTypes:
        items:
          $ref: '#/definitions/cyclonedx.TaskType'
        type: array
      timeEnd:
        type: string
      timeStart:
        type: string
      trigger:
        $ref: '#/definitions/cyclonedx.TaskTrigger'
      uid:
        type: string
      workspaces:
        items:
          $ref: '#/definitions/cyclonedx.TaskWorkspace'
        type: array
    type: object
  cyclonedx.TaskCommand:
    properties:
      executed:
        type: string
      properties:
        items:
          $ref: '#/definitions/cyclonedx.Property'
        type: array
    type: object
  cyclonedx.TaskInput:
    properties:
      data:
        $ref: '#/definitions/cyclonedx.AttachedText'
      environmentVars:
        items:
          $ref: '#/definitions/cyclonedx.EnvironmentVariableChoice'
        type: array
      parameters:
        items:
          $ref: '#/definitions/cyclonedx.Parameter'
        type: array
      properties:
        items:
          $ref: '#/definitions/cyclonedx.Property'
        type: array
      resource:
        $ref: '#/definitions/cyclonedx.ResourceReferenceChoice'
      source:
        $ref: '#/definitions/cyclonedx.ResourceReferenceChoice'
      target:
        $ref: '#/definitions/cyclonedx.ResourceReferenceChoice'
    type: object
  cyclonedx.TaskOutput:
    properties:
      data:
        $ref: '#/definitions/cyclonedx.AttachedText'
      environmentVars:
        items:
          $ref: '#/definitions/cyclonedx.EnvironmentVariableChoice'
        type: array
      parameters:
        items:
          $ref: '#/definitions/cyclonedx.Parameter'
        type: array
      properties:
        items:
          $ref: '#/definitions/cyclonedx.Property'
        type: array
      resource:
        $ref: '#/definitions/cyclonedx.ResourceReferenceChoice'
      source:
        $ref: '#/definitions/cyclonedx.ResourceReferenceChoice'
      target:
        $ref: '#/definitions/cyclonedx.ResourceReferenceChoice'
      type:
        $ref: '#/definitions/cyclonedx.TaskOutputType'
    type: object
  cyclonedx.TaskOutputType:
    enum:
    - artifact
    - attestation
    - evidence
    - log
    - metrics
    - other
    type: string
    x-enum-varnames:
    - TaskOutputTypeArtifact
    - TaskOutputTypeAttestation
    - TaskOutputTypeEvidence
    - TaskOutputTypeLog
    - TaskOutputTypeMetrics
    - TaskOutputTypeOther
  cyclonedx.TaskStep:
    properties:
      commands:
        items:
          $ref: '#/definitions/cyclonedx.TaskCommand'
        type: array
      description:
        type: string
      name:
        type: string
      properties:
        items:
          $ref: '#/definitions/cyclonedx.Property'
        type: array
    type: object
  cyclonedx.TaskTrigger:
    properties:
      bom-ref:
        type: string
      conditions:
        items:
          $ref: '#/definitions/cyclonedx.TaskTriggerCondition'
        type: array
      description:
        type: string
      event:
        $ref: '#/definitions/cyclonedx.Event'
      inputs:
        items:
          $ref: '#/definitions/cyclonedx.TaskInput'
        type: array
      name:
        type: string
      outputs:
        items:
          $ref: '#/definitions/cyclonedx.TaskOutput'
        type: array
      properties:
        items:
          $ref: '#/definitions/cyclonedx.Property'
        type: array
      resourceReferences:
        items:
          $ref: '#/definitions/cyclonedx.ResourceReferenceChoice'
        type: array
      timeActivated:
        type: string
      type:
        $ref: '#/definitions/cyclonedx.TaskTriggerType'
      uid:
        type: string
    type: object
  cyclonedx.TaskTriggerCondition:
    properties:
      description:
        type: string
      expression:
        type: string
      properties:
        items:
          $ref: '#/definitions/cyclonedx.Property'
        type: array
    type: object
  cyclonedx.TaskTriggerType:
    enum:
    - api
    - manual
    - scheduled
    - webhook
    type: string
    x-enum-varnames:
    - TaskTriggerTypeAPI
    - TaskTriggerTypeManual
    - TaskTriggerTypeScheduled
    - TaskTriggerTypeWebhook
  cyclonedx.TaskType:
    enum:
    - build
    - clean
    - clone
    - copy
    - deliver
    - deploy
    - lint
    - merge
    - other
    - release
    - scan
    - test
    type: string
    x-enum-varnames:
    - TaskTypeBuild
    - TaskTypeClean
    - TaskTypeClone
    - TaskTypeCopy
    - TaskTypeDeliver
    - TaskTypeDeploy
    - TaskTypeLint
    - TaskTypeMerge
    - TaskTypeOther
    - TaskTypeRelease
    - TaskTypeScan
    - TaskTypeTest
  cyclonedx.TaskWorkspace:
    properties:
      accessMode:
        $ref: '#/definitions/cyclonedx.TaskWorkspaceAccessMode'
      aliases:
        items:
          type: string
        type: array
      bom-ref:
        type: string
      description:
        type: string
      managedDataType:
        type: string
      mountPath:
        type: string
      name:
        type: string
      properties:
        items:
          $ref: '#/definitions/cyclonedx.Property'
        type: array
      resourceReferences:
        items:
          $ref: '#/definitions/cyclonedx.ResourceReferenceChoice'
        type: array
      uid:
        type: string
      volume:
        $ref: '#/definitions/cyclonedx.Volume'
      volumeRequest:
        type: string
    type: object
  cyclonedx.TaskWorkspaceAccessMode:
    enum:
    - read-only
    - read-write
    - read-write-once
    - write-once
    - write-only
    type: string
    x-enum-varnames:
    - TaskWorkspaceAccessModeReadOnly
    - TaskWorkspaceAccessModeReadWrite
    - TaskWorkspaceAccessModeReadWriteOnce
    - TaskWorkspaceAccessModeWriteOnce
    - TaskWorkspaceAccessModeWriteOnly
  cyclonedx.ToolsChoice:
    type: object
  cyclonedx.Volume:
    properties:
      mode:
        $ref: '#/definitions/cyclonedx.VolumeMode'
      name:
        type: string
      path:
        type: string
      persistent:
        type: boolean
      properties:
        items:
          $ref: '#/definitions/cyclonedx.Property'
        type: array
      remote:
        type: boolean
      sizeAllocated:
        type: string
      uid:
        type: string
    type: object
  cyclonedx.VolumeMode:
    enum:
    - block
    - file-system
    type: string
    x-enum-varnames:
    - VolumeModeBlock
    - VolumeModeFilesystem
  cyclonedx.Vulnerability:
    properties:
      advisories:
        items:
          $ref: '#/definitions/cyclonedx.Advisory'
        type: array
      affects:
        items:
          $ref: '#/definitions/cyclonedx.Affects'
        type: array
      analysis:
        $ref: '#/definitions/cyclonedx.VulnerabilityAnalysis'
      bom-ref:
        type: string
      created:
        type: string
      credits:
        $ref: '#/definitions/cyclonedx.Credits'
      cwes:
        items:
          type: integer
        type: array
      description:
        type: string
      detail:
        type: string
      id:
        type: string
      proofOfConcept:
        $ref: '#/definitions/cyclonedx.ProofOfConcept'
      properties:
        items:
          $ref: '#/definitions/cyclonedx.Property'
        type: array
      published:
        type: string
      ratings:
        items:
          $ref: '#/definitions/cyclonedx.VulnerabilityRating'
        type: array
      recommendation:
        type: string
      references:
        items:
          $ref: '#/definitions/cyclonedx.VulnerabilityReference'
        type: array
      rejected:
        type: string
      source:
        $ref: '#/definitions/cyclonedx.Source'
      tools:
        $ref: '#/definitions/cyclonedx.ToolsChoice'
      updated:
        type: string
      workaround:
        type: string
    type: object
  cyclonedx.VulnerabilityAnalysis:
    properties:
      detail:
        type: string
      firstIssued:
        type: string
      justification:
        $ref: '#/definitions/cyclonedx.ImpactAnalysisJustification'
      lastUpdated:
        type: string
      response:
        items:
          $ref: '#/definitions/cyclonedx.ImpactAnalysisResponse'
        type: array
      state:
        $ref: '#/definitions/cyclonedx.ImpactAnalysisState'
    type: object
  cyclonedx.VulnerabilityRating:
    properties:
      justification:
        type: string
      method:
        $ref: '#/definitions/cyclonedx.ScoringMethod'
      score:
        type: number
      severity:
        $ref: '#/definitions/cyclonedx.Severity'
      source:
        $ref: '#/definitions/cyclonedx.Source'
      vector:
        type: string
    type: object
  cyclonedx.VulnerabilityReference:
    properties:
      id:
        type: string
      source:
        $ref: '#/definitions/cyclonedx.Source'
    type: object
  cyclonedx.VulnerabilityStatus:
    enum:
    - unknown
    - affected
    - unaffected
    type: string
    x-enum-varnames:
    - VulnerabilityStatusUnknown
    - VulnerabilityStatusAffected
    - VulnerabilityStatusNotAffected
  cyclonedx.Workflow:
    properties:
      bom-ref:
        type: string
      description:
        type: string
      inputs:
        items:
          $ref: '#/definitions/cyclonedx.TaskInput'
        type: array
      name:
        type: string
      outputs:
        items:
          $ref: '#/definitions/cyclonedx.TaskOutput'
        type: array
      properties:
        items:
          $ref: '#/definitions/cyclonedx.Property'
        type: array
      resourceReferences:
        items:
          $ref: '#/definitions/cyclonedx.ResourceReferenceChoice'
        type: array
      runtimeTopology:
        items:
          $ref: '#/definitions/cyclonedx.Dependency'
        type: array
      steps:
        items:
          $ref: '#/definitions/cyclonedx.TaskStep'
        type: array
      taskDependencies:
        items:
          $ref: '#/definitions/cyclonedx.Dependency'
        type: array
      taskTypes:
        items:
          $ref: '#/definitions/cyclonedx.TaskType'
        type: array
      tasks:
        items:
          $ref: '#/definitions/cyclonedx.Task'
        type: array
      timeEnd:
        type: string
      timeStart:
        type: string
      trigger:
        $ref: '#/definitions/cyclonedx.TaskTrigger'
      uid:
        type: string
      workspaces:
        items:
          $ref: '#/definitions/cyclonedx.TaskWorkspace'
        type: array
    type: object
  server.errorResponse:
    properties:
      error:
        type: string
    type: object
  server.imageGetRequest:
    properties:
      bom:
        $ref: '#/definitions/cyclonedx.BOM'
      image:
        example: nginx
        type: string
      plugins:
        example:
        - certificates
        items:
          type: string
        type: array
    required:
    - image
    type: object
host: localhost:8080
info:
  contact: {}
  description: CBOMkit-theia analyzes cryptographic assets in a container image or
    directory.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: CBOMkit-theia
  version: "1.0"
paths:
  /image/get:
    post:
      consumes:
      - application/json
      parameters:
      - description: Request body containing the image identifier, list of activated
          plugins and BOM.
        in: body
        name: request
        schema:
          $ref: '#/definitions/server.imageGetRequest'
      produces:
      - application/vnd.cyclonedx+json; version=1.6
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cyclonedx.BOM'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.errorResponse'
      summary: Generate CBOM from existing image
      tags:
      - image
produces:
- application/vnd.cyclonedx+json; version=1.6
swagger: "2.0"
