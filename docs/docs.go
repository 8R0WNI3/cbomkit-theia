// Copyright 2024 IBM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: Apache-2.0

// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/vnd.cyclonedx+json; version=1.6"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/image/get": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/vnd.cyclonedx+json; version=1.6"
                ],
                "tags": [
                    "image"
                ],
                "summary": "Generate CBOM from existing image",
                "parameters": [
                    {
                        "description": "Request body containing the image identifier, list of activated plugins and BOM.",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/server.imageGetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cyclonedx.BOM"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "cyclonedx.Advisory": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.AffectedVersions": {
            "type": "object",
            "properties": {
                "range": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/cyclonedx.VulnerabilityStatus"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.Affects": {
            "type": "object",
            "properties": {
                "ref": {
                    "type": "string"
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.AffectedVersions"
                    }
                }
            }
        },
        "cyclonedx.Affirmation": {
            "type": "object",
            "properties": {
                "signatories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Signatory"
                    }
                },
                "signature": {
                    "$ref": "#/definitions/cyclonedx.JSFSignature"
                },
                "statement": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.Annotation": {
            "type": "object",
            "properties": {
                "annotator": {
                    "$ref": "#/definitions/cyclonedx.Annotator"
                },
                "bom-ref": {
                    "type": "string"
                },
                "subjects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "text": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.Annotator": {
            "type": "object",
            "properties": {
                "component": {
                    "$ref": "#/definitions/cyclonedx.Component"
                },
                "individual": {
                    "$ref": "#/definitions/cyclonedx.OrganizationalContact"
                },
                "organization": {
                    "$ref": "#/definitions/cyclonedx.OrganizationalEntity"
                },
                "service": {
                    "$ref": "#/definitions/cyclonedx.Service"
                }
            }
        },
        "cyclonedx.Assessor": {
            "type": "object",
            "properties": {
                "bom-ref": {
                    "type": "string"
                },
                "organization": {
                    "$ref": "#/definitions/cyclonedx.OrganizationalEntity"
                },
                "thirdParty": {
                    "type": "boolean"
                }
            }
        },
        "cyclonedx.AttachedText": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "contentType": {
                    "type": "string"
                },
                "encoding": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.Attestation": {
            "type": "object",
            "properties": {
                "assessor": {
                    "type": "string"
                },
                "map": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.AttestationMap"
                    }
                },
                "signature": {
                    "$ref": "#/definitions/cyclonedx.JSFSignature"
                },
                "summary": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.AttestationConfidence": {
            "type": "object",
            "properties": {
                "rationale": {
                    "type": "string"
                },
                "score": {
                    "type": "number"
                }
            }
        },
        "cyclonedx.AttestationConformance": {
            "type": "object",
            "properties": {
                "mitigationStrategies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "rationale": {
                    "type": "string"
                },
                "score": {
                    "type": "number"
                }
            }
        },
        "cyclonedx.AttestationMap": {
            "type": "object",
            "properties": {
                "claims": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "confidence": {
                    "$ref": "#/definitions/cyclonedx.AttestationConfidence"
                },
                "conformance": {
                    "$ref": "#/definitions/cyclonedx.AttestationConformance"
                },
                "counterClaims": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "requirement": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.BOM": {
            "type": "object",
            "properties": {
                "$schema": {
                    "description": "JSON specific fields",
                    "type": "string"
                },
                "annotations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Annotation"
                    }
                },
                "bomFormat": {
                    "type": "string"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Component"
                    }
                },
                "compositions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Composition"
                    }
                },
                "declarations": {
                    "$ref": "#/definitions/cyclonedx.Declarations"
                },
                "definitions": {
                    "$ref": "#/definitions/cyclonedx.Definitions"
                },
                "dependencies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Dependency"
                    }
                },
                "externalReferences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.ExternalReference"
                    }
                },
                "formulation": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Formula"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/cyclonedx.Metadata"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Property"
                    }
                },
                "serialNumber": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Service"
                    }
                },
                "specVersion": {
                    "$ref": "#/definitions/cyclonedx.SpecVersion"
                },
                "version": {
                    "type": "integer"
                },
                "vulnerabilities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Vulnerability"
                    }
                }
            }
        },
        "cyclonedx.Callstack": {
            "type": "object",
            "properties": {
                "frames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.CallstackFrame"
                    }
                }
            }
        },
        "cyclonedx.CallstackFrame": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "integer"
                },
                "fullFilename": {
                    "type": "string"
                },
                "function": {
                    "type": "string"
                },
                "line": {
                    "type": "integer"
                },
                "module": {
                    "type": "string"
                },
                "package": {
                    "type": "string"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "cyclonedx.CertificateProperties": {
            "type": "object",
            "properties": {
                "certificateExtension": {
                    "type": "string"
                },
                "certificateFormat": {
                    "type": "string"
                },
                "issuerName": {
                    "type": "string"
                },
                "notValidAfter": {
                    "type": "string"
                },
                "notValidBefore": {
                    "type": "string"
                },
                "signatureAlgorithmRef": {
                    "type": "string"
                },
                "subjectName": {
                    "type": "string"
                },
                "subjectPublicKeyRef": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.CipherSuite": {
            "type": "object",
            "properties": {
                "algorithms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "identifiers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.Claim": {
            "type": "object",
            "properties": {
                "bom-ref": {
                    "type": "string"
                },
                "counterEvidence": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "evidence": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "externalReferences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.ExternalReference"
                    }
                },
                "mitigationStrategies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "predicate": {
                    "type": "string"
                },
                "reasoning": {
                    "type": "string"
                },
                "signature": {
                    "$ref": "#/definitions/cyclonedx.JSFSignature"
                },
                "target": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.Commit": {
            "type": "object",
            "properties": {
                "author": {
                    "$ref": "#/definitions/cyclonedx.IdentifiableAction"
                },
                "committer": {
                    "$ref": "#/definitions/cyclonedx.IdentifiableAction"
                },
                "message": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.Component": {
            "type": "object",
            "properties": {
                "author": {
                    "description": "Deprecated: Use authors or manufacturer instead.",
                    "type": "string"
                },
                "authors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.OrganizationalContact"
                    }
                },
                "bom-ref": {
                    "type": "string"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Component"
                    }
                },
                "copyright": {
                    "type": "string"
                },
                "cpe": {
                    "type": "string"
                },
                "cryptoProperties": {
                    "$ref": "#/definitions/cyclonedx.CryptoProperties"
                },
                "data": {
                    "$ref": "#/definitions/cyclonedx.ComponentData"
                },
                "description": {
                    "type": "string"
                },
                "evidence": {
                    "$ref": "#/definitions/cyclonedx.Evidence"
                },
                "externalReferences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.ExternalReference"
                    }
                },
                "group": {
                    "type": "string"
                },
                "hashes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Hash"
                    }
                },
                "licenses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.LicenseChoice"
                    }
                },
                "manufacturer": {
                    "$ref": "#/definitions/cyclonedx.OrganizationalEntity"
                },
                "mime-type": {
                    "type": "string"
                },
                "modelCard": {
                    "$ref": "#/definitions/cyclonedx.MLModelCard"
                },
                "modified": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "omniborId": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pedigree": {
                    "$ref": "#/definitions/cyclonedx.Pedigree"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Property"
                    }
                },
                "publisher": {
                    "type": "string"
                },
                "purl": {
                    "type": "string"
                },
                "releaseNotes": {
                    "$ref": "#/definitions/cyclonedx.ReleaseNotes"
                },
                "scope": {
                    "$ref": "#/definitions/cyclonedx.Scope"
                },
                "supplier": {
                    "$ref": "#/definitions/cyclonedx.OrganizationalEntity"
                },
                "swhid": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "swid": {
                    "$ref": "#/definitions/cyclonedx.SWID"
                },
                "type": {
                    "$ref": "#/definitions/cyclonedx.ComponentType"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.ComponentData": {
            "type": "object",
            "properties": {
                "bom-ref": {
                    "type": "string"
                },
                "classification": {
                    "type": "string"
                },
                "contents": {
                    "$ref": "#/definitions/cyclonedx.ComponentDataContents"
                },
                "description": {
                    "type": "string"
                },
                "governance": {
                    "$ref": "#/definitions/cyclonedx.DataGovernance"
                },
                "graphics": {
                    "$ref": "#/definitions/cyclonedx.ComponentDataGraphics"
                },
                "name": {
                    "type": "string"
                },
                "sensitiveData": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "$ref": "#/definitions/cyclonedx.ComponentDataType"
                }
            }
        },
        "cyclonedx.ComponentDataContents": {
            "type": "object",
            "properties": {
                "attachment": {
                    "$ref": "#/definitions/cyclonedx.AttachedText"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Property"
                    }
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.ComponentDataGovernanceResponsibleParty": {
            "type": "object",
            "properties": {
                "contact": {
                    "$ref": "#/definitions/cyclonedx.OrganizationalContact"
                },
                "organization": {
                    "$ref": "#/definitions/cyclonedx.OrganizationalEntity"
                }
            }
        },
        "cyclonedx.ComponentDataGraphic": {
            "type": "object",
            "properties": {
                "image": {
                    "$ref": "#/definitions/cyclonedx.AttachedText"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.ComponentDataGraphics": {
            "type": "object",
            "properties": {
                "collection": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.ComponentDataGraphic"
                    }
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.ComponentDataType": {
            "type": "string",
            "enum": [
                "configuration",
                "dataset",
                "definition",
                "other",
                "source-code"
            ],
            "x-enum-varnames": [
                "ComponentDataTypeConfiguration",
                "ComponentDataTypeDataset",
                "ComponentDataTypeDefinition",
                "ComponentDataTypeOther",
                "ComponentDataTypeSourceCode"
            ]
        },
        "cyclonedx.ComponentType": {
            "type": "string",
            "enum": [
                "application",
                "container",
                "cryptographic-asset",
                "data",
                "device",
                "device-driver",
                "file",
                "firmware",
                "framework",
                "library",
                "machine-learning-model",
                "operating-system",
                "platform"
            ],
            "x-enum-varnames": [
                "ComponentTypeApplication",
                "ComponentTypeContainer",
                "ComponentTypeCryptographicAsset",
                "ComponentTypeData",
                "ComponentTypeDevice",
                "ComponentTypeDeviceDriver",
                "ComponentTypeFile",
                "ComponentTypeFirmware",
                "ComponentTypeFramework",
                "ComponentTypeLibrary",
                "ComponentTypeMachineLearningModel",
                "ComponentTypeOS",
                "ComponentTypePlatform"
            ]
        },
        "cyclonedx.Composition": {
            "type": "object",
            "properties": {
                "aggregate": {
                    "$ref": "#/definitions/cyclonedx.CompositionAggregate"
                },
                "assemblies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "bom-ref": {
                    "type": "string"
                },
                "dependencies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "vulnerabilities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "cyclonedx.CompositionAggregate": {
            "type": "string",
            "enum": [
                "complete",
                "incomplete",
                "incomplete_first_party_only",
                "incomplete_first_party_opensource_only",
                "incomplete_first_party_proprietary_only",
                "incomplete_third_party_only",
                "incomplete_third_party_opensource_only",
                "incomplete_third_party_proprietary_only",
                "not_specified",
                "unknown"
            ],
            "x-enum-varnames": [
                "CompositionAggregateComplete",
                "CompositionAggregateIncomplete",
                "CompositionAggregateIncompleteFirstPartyOnly",
                "CompositionAggregateIncompleteFirstPartyOpenSourceOnly",
                "CompositionAggregateIncompleteFirstPartyProprietaryOnly",
                "CompositionAggregateIncompleteThirdPartyOnly",
                "CompositionAggregateIncompleteThirdPartyOpenSourceOnly",
                "CompositionAggregateIncompleteThirdPartyProprietaryOnly",
                "CompositionAggregateNotSpecified",
                "CompositionAggregateUnknown"
            ]
        },
        "cyclonedx.Copyright": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.Credits": {
            "type": "object",
            "properties": {
                "individuals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.OrganizationalContact"
                    }
                },
                "organizations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.OrganizationalEntity"
                    }
                }
            }
        },
        "cyclonedx.CryptoAlgorithmMode": {
            "type": "string",
            "enum": [
                "cbc",
                "ecb",
                "ccm",
                "gcm",
                "cfb",
                "ofb",
                "ctr",
                "other",
                "unknown"
            ],
            "x-enum-varnames": [
                "CryptoAlgorithmModeCBC",
                "CryptoAlgorithmModeECB",
                "CryptoAlgorithmModeCCM",
                "CryptoAlgorithmModeGCM",
                "CryptoAlgorithmModeCFB",
                "CryptoAlgorithmModeOFB",
                "CryptoAlgorithmModeCTR",
                "CryptoAlgorithmModeOther",
                "CryptoAlgorithmModeUnknown"
            ]
        },
        "cyclonedx.CryptoAlgorithmProperties": {
            "type": "object",
            "properties": {
                "certificationLevel": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.CryptoCertificationLevel"
                    }
                },
                "classicalSecurityLevel": {
                    "type": "integer"
                },
                "cryptoFunctions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.CryptoFunction"
                    }
                },
                "curve": {
                    "type": "string"
                },
                "executionEnvironment": {
                    "$ref": "#/definitions/cyclonedx.CryptoExecutionEnvironment"
                },
                "implementationPlatform": {
                    "$ref": "#/definitions/cyclonedx.ImplementationPlatform"
                },
                "mode": {
                    "$ref": "#/definitions/cyclonedx.CryptoAlgorithmMode"
                },
                "nistQuantumSecurityLevel": {
                    "type": "integer"
                },
                "padding": {
                    "$ref": "#/definitions/cyclonedx.CryptoPadding"
                },
                "parameterSetIdentifier": {
                    "type": "string"
                },
                "primitive": {
                    "$ref": "#/definitions/cyclonedx.CryptoPrimitive"
                }
            }
        },
        "cyclonedx.CryptoAssetType": {
            "type": "string",
            "enum": [
                "algorithm",
                "certificate",
                "protocol",
                "related-crypto-material"
            ],
            "x-enum-varnames": [
                "CryptoAssetTypeAlgorithm",
                "CryptoAssetTypeCertificate",
                "CryptoAssetTypeProtocol",
                "CryptoAssetTypeRelatedCryptoMaterial"
            ]
        },
        "cyclonedx.CryptoCertificationLevel": {
            "type": "string",
            "enum": [
                "none",
                "fips140-1-l1",
                "fips140-1-l2",
                "fips140-1-l3",
                "fips140-1-l4",
                "fips140-2-l1",
                "fips140-2-l2",
                "fips140-2-l3",
                "fips140-2-l4",
                "fips140-3-l1",
                "fips140-3-l2",
                "fips140-3-l3",
                "fips140-3-l4",
                "cc-eal1",
                "cc-eal1+",
                "cc-eal2",
                "cc-eal2+",
                "cc-eal3",
                "cc-eal3+",
                "cc-eal4",
                "cc-eal4+",
                "cc-eal5",
                "cc-eal5+",
                "cc-eal6",
                "cc-eal6+",
                "cc-eal7",
                "cc-eal7+",
                "other",
                "unknown"
            ],
            "x-enum-varnames": [
                "CryptoCertificationLevelNone",
                "CryptoCertificationLevelFIPS140_1_L1",
                "CryptoCertificationLevelFIPS140_1_L2",
                "CryptoCertificationLevelFIPS140_1_L3",
                "CryptoCertificationLevelFIPS140_1_L4",
                "CryptoCertificationLevelFIPS140_2_L1",
                "CryptoCertificationLevelFIPS140_2_L2",
                "CryptoCertificationLevelFIPS140_2_L3",
                "CryptoCertificationLevelFIPS140_2_L4",
                "CryptoCertificationLevelFIPS140_3_L1",
                "CryptoCertificationLevelFIPS140_3_L2",
                "CryptoCertificationLevelFIPS140_3_L3",
                "CryptoCertificationLevelFIPS140_3_L4",
                "CryptoCertificationLevelCCEAL1",
                "CryptoCertificationLevelCCEAL1Plus",
                "CryptoCertificationLevelCCEAL2",
                "CryptoCertificationLevelCCEAL2Plus",
                "CryptoCertificationLevelCCEAL3",
                "CryptoCertificationLevelCCEAL3Plus",
                "CryptoCertificationLevelCCEAL4",
                "CryptoCertificationLevelCCEAL4Plus",
                "CryptoCertificationLevelCCEAL5",
                "CryptoCertificationLevelCCEAL5Plus",
                "CryptoCertificationLevelCCEAL6",
                "CryptoCertificationLevelCCEAL6Plus",
                "CryptoCertificationLevelCCEAL7",
                "CryptoCertificationLevelCCEAL7Plus",
                "CryptoCertificationLevelOther",
                "CryptoCertificationLevelUnknown"
            ]
        },
        "cyclonedx.CryptoExecutionEnvironment": {
            "type": "string",
            "enum": [
                "software-plain-ram",
                "software-encrypted-ram",
                "software-tee",
                "hardware",
                "other",
                "unknown"
            ],
            "x-enum-varnames": [
                "CryptoExecutionEnvironmentSoftwarePlainRAM",
                "CryptoExecutionEnvironmentSoftwareEncryptedRAM",
                "CryptoExecutionEnvironmentSoftwareTEE",
                "CryptoExecutionEnvironmentHardware",
                "CryptoExecutionEnvironmentOther",
                "CryptoExecutionEnvironmentUnknown"
            ]
        },
        "cyclonedx.CryptoFunction": {
            "type": "string",
            "enum": [
                "generate",
                "keygen",
                "encrypt",
                "decrypt",
                "digest",
                "tag",
                "keyderive",
                "sign",
                "verify",
                "encapsulate",
                "decapsulate",
                "other",
                "unknown"
            ],
            "x-enum-varnames": [
                "CryptoFunctionGenerate",
                "CryptoFunctionKeygen",
                "CryptoFunctionEncrypt",
                "CryptoFunctionDecrypt",
                "CryptoFunctionDigest",
                "CryptoFunctionTag",
                "CryptoFunctionKeyderive",
                "CryptoFunctionSign",
                "CryptoFunctionVerify",
                "CryptoFunctionEncapsulate",
                "CryptoFunctionDecapsulate",
                "CryptoFunctionOther",
                "CryptoFunctionUnknown"
            ]
        },
        "cyclonedx.CryptoKeyState": {
            "type": "string",
            "enum": [
                "pre-activation",
                "active",
                "suspended",
                "deactivated",
                "compromised",
                "destroyed"
            ],
            "x-enum-varnames": [
                "CryptoKeyStatePreActivation",
                "CryptoKeyStateActive",
                "CryptoKeyStateSuspended",
                "CryptoKeyStateDeactivated",
                "CryptoKeyStateCompromised",
                "CryptoKeyStateDestroyed"
            ]
        },
        "cyclonedx.CryptoPadding": {
            "type": "string",
            "enum": [
                "pkcs5",
                "pkcs7",
                "pkcs1v15",
                "oaep",
                "raw",
                "other",
                "unknown"
            ],
            "x-enum-varnames": [
                "CryptoPaddingPKCS5",
                "CryptoPaddingPKCS7",
                "CryptoPaddingPKCS1v15",
                "CryptoPaddingOAEP",
                "CryptoPaddingRaw",
                "CryptoPaddingOther",
                "CryptoPaddingUnknown"
            ]
        },
        "cyclonedx.CryptoPrimitive": {
            "type": "string",
            "enum": [
                "drbg",
                "mac",
                "block-cipher",
                "stream-cipher",
                "signature",
                "hash",
                "pke",
                "xof",
                "kdf",
                "key-agree",
                "kem",
                "ae",
                "combiner",
                "other",
                "unknown"
            ],
            "x-enum-varnames": [
                "CryptoPrimitiveDRBG",
                "CryptoPrimitiveMAC",
                "CryptoPrimitiveBlockCipher",
                "CryptoPrimitiveStreamCipher",
                "CryptoPrimitiveSignature",
                "CryptoPrimitiveHash",
                "CryptoPrimitivePKE",
                "CryptoPrimitiveXOF",
                "CryptoPrimitiveKDF",
                "CryptoPrimitiveKeyAgree",
                "CryptoPrimitiveKEM",
                "CryptoPrimitiveAE",
                "CryptoPrimitiveCombiner",
                "CryptoPrimitiveOther",
                "CryptoPrimitiveUnknown"
            ]
        },
        "cyclonedx.CryptoProperties": {
            "type": "object",
            "properties": {
                "algorithmProperties": {
                    "$ref": "#/definitions/cyclonedx.CryptoAlgorithmProperties"
                },
                "assetType": {
                    "$ref": "#/definitions/cyclonedx.CryptoAssetType"
                },
                "certificateProperties": {
                    "$ref": "#/definitions/cyclonedx.CertificateProperties"
                },
                "oid": {
                    "type": "string"
                },
                "protocolProperties": {
                    "$ref": "#/definitions/cyclonedx.CryptoProtocolProperties"
                },
                "relatedCryptoMaterialProperties": {
                    "$ref": "#/definitions/cyclonedx.RelatedCryptoMaterialProperties"
                }
            }
        },
        "cyclonedx.CryptoProtocolProperties": {
            "type": "object",
            "properties": {
                "cipherSuites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.CipherSuite"
                    }
                },
                "cryptoRefArray": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ikev2TransformTypes": {
                    "$ref": "#/definitions/cyclonedx.IKEv2TransformTypes"
                },
                "type": {
                    "$ref": "#/definitions/cyclonedx.CryptoProtocolType"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.CryptoProtocolType": {
            "type": "string",
            "enum": [
                "tls",
                "ssh",
                "ipsec",
                "ike",
                "sstp",
                "wpa",
                "other",
                "unknown"
            ],
            "x-enum-varnames": [
                "CryptoProtocolTypeTLS",
                "CryptoProtocolTypeSSH",
                "CryptoProtocolTypeIPSec",
                "CryptoProtocolTypeIKE",
                "CryptoProtocolTypeSSTP",
                "CryptoProtocolTypeWPA",
                "CryptoProtocolTypeOther",
                "CryptoProtocolTypeUnknown"
            ]
        },
        "cyclonedx.DataClassification": {
            "type": "object",
            "properties": {
                "classification": {
                    "type": "string"
                },
                "flow": {
                    "$ref": "#/definitions/cyclonedx.DataFlow"
                }
            }
        },
        "cyclonedx.DataFlow": {
            "type": "string",
            "enum": [
                "bi-directional",
                "inbound",
                "outbound",
                "unknown"
            ],
            "x-enum-varnames": [
                "DataFlowBidirectional",
                "DataFlowInbound",
                "DataFlowOutbound",
                "DataFlowUnknown"
            ]
        },
        "cyclonedx.DataGovernance": {
            "type": "object",
            "properties": {
                "custodians": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.ComponentDataGovernanceResponsibleParty"
                    }
                },
                "owners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.ComponentDataGovernanceResponsibleParty"
                    }
                },
                "stewards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.ComponentDataGovernanceResponsibleParty"
                    }
                }
            }
        },
        "cyclonedx.DeclarationEvidence": {
            "type": "object",
            "properties": {
                "author": {
                    "$ref": "#/definitions/cyclonedx.OrganizationalContact"
                },
                "bom-ref": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.EvidenceData"
                    }
                },
                "description": {
                    "type": "string"
                },
                "expires": {
                    "type": "string"
                },
                "propertyName": {
                    "type": "string"
                },
                "reviewer": {
                    "$ref": "#/definitions/cyclonedx.OrganizationalContact"
                },
                "signature": {
                    "$ref": "#/definitions/cyclonedx.JSFSignature"
                }
            }
        },
        "cyclonedx.Declarations": {
            "type": "object",
            "properties": {
                "affirmation": {
                    "$ref": "#/definitions/cyclonedx.Affirmation"
                },
                "assessors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Assessor"
                    }
                },
                "attestations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Attestation"
                    }
                },
                "claims": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Claim"
                    }
                },
                "evidence": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.DeclarationEvidence"
                    }
                },
                "signature": {
                    "$ref": "#/definitions/cyclonedx.JSFSignature"
                },
                "targets": {
                    "$ref": "#/definitions/cyclonedx.Targets"
                }
            }
        },
        "cyclonedx.Definitions": {
            "type": "object",
            "properties": {
                "standards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.StandardDefinition"
                    }
                }
            }
        },
        "cyclonedx.Dependency": {
            "type": "object",
            "properties": {
                "dependsOn": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ref": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.Diff": {
            "type": "object",
            "properties": {
                "text": {
                    "$ref": "#/definitions/cyclonedx.AttachedText"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.EnvironmentVariableChoice": {
            "type": "object"
        },
        "cyclonedx.Event": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/cyclonedx.AttachedText"
                },
                "description": {
                    "type": "string"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Property"
                    }
                },
                "source": {
                    "$ref": "#/definitions/cyclonedx.ResourceReferenceChoice"
                },
                "target": {
                    "$ref": "#/definitions/cyclonedx.ResourceReferenceChoice"
                },
                "timeReceived": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.Evidence": {
            "type": "object",
            "properties": {
                "callstack": {
                    "$ref": "#/definitions/cyclonedx.Callstack"
                },
                "copyright": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Copyright"
                    }
                },
                "identity": {
                    "$ref": "#/definitions/cyclonedx.EvidenceIdentity"
                },
                "licenses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.LicenseChoice"
                    }
                },
                "occurrences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.EvidenceOccurrence"
                    }
                }
            }
        },
        "cyclonedx.EvidenceData": {
            "type": "object",
            "properties": {
                "classification": {
                    "$ref": "#/definitions/cyclonedx.DataClassification"
                },
                "contents": {
                    "$ref": "#/definitions/cyclonedx.EvidenceDataContents"
                },
                "governance": {
                    "$ref": "#/definitions/cyclonedx.DataGovernance"
                },
                "name": {
                    "type": "string"
                },
                "sensitiveData": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "cyclonedx.EvidenceDataContents": {
            "type": "object",
            "properties": {
                "attachment": {
                    "$ref": "#/definitions/cyclonedx.AttachedText"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.EvidenceIdentity": {
            "type": "object",
            "properties": {
                "confidence": {
                    "type": "number"
                },
                "field": {
                    "$ref": "#/definitions/cyclonedx.EvidenceIdentityFieldType"
                },
                "methods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.EvidenceIdentityMethod"
                    }
                },
                "tools": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "cyclonedx.EvidenceIdentityFieldType": {
            "type": "string",
            "enum": [
                "cpe",
                "group",
                "hash",
                "name",
                "purl",
                "omniborId",
                "swhid",
                "swid",
                "version"
            ],
            "x-enum-varnames": [
                "EvidenceIdentityFieldTypeCPE",
                "EvidenceIdentityFieldTypeGroup",
                "EvidenceIdentityFieldTypeHash",
                "EvidenceIdentityFieldTypeName",
                "EvidenceIdentityFieldTypePURL",
                "EvidenceIdentityFieldTypeOmniborID",
                "EvidenceIdentityFieldTypeSWHID",
                "EvidenceIdentityFieldTypeSWID",
                "EvidenceIdentityFieldTypeVersion"
            ]
        },
        "cyclonedx.EvidenceIdentityMethod": {
            "type": "object",
            "properties": {
                "confidence": {
                    "type": "number"
                },
                "technique": {
                    "$ref": "#/definitions/cyclonedx.EvidenceIdentityTechnique"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.EvidenceIdentityTechnique": {
            "type": "string",
            "enum": [
                "ast-fingerprint",
                "attestation",
                "binary-analysis",
                "dynamic-analysis",
                "filename",
                "hash-comparison",
                "instrumentation",
                "manifest-analysis",
                "other",
                "source-code-analysis"
            ],
            "x-enum-varnames": [
                "EvidenceIdentityTechniqueASTFingerprint",
                "EvidenceIdentityTechniqueAttestation",
                "EvidenceIdentityTechniqueBinaryAnalysis",
                "EvidenceIdentityTechniqueDynamicAnalysis",
                "EvidenceIdentityTechniqueFilename",
                "EvidenceIdentityTechniqueHashComparison",
                "EvidenceIdentityTechniqueInstrumentation",
                "EvidenceIdentityTechniqueManifestAnalysis",
                "EvidenceIdentityTechniqueOther",
                "EvidenceIdentityTechniqueSourceCodeAnalysis"
            ]
        },
        "cyclonedx.EvidenceOccurrence": {
            "type": "object",
            "properties": {
                "additionalContext": {
                    "type": "string"
                },
                "bom-ref": {
                    "type": "string"
                },
                "line": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "offset": {
                    "type": "integer"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.ExternalReference": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "hashes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Hash"
                    }
                },
                "type": {
                    "$ref": "#/definitions/cyclonedx.ExternalReferenceType"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.ExternalReferenceType": {
            "type": "string",
            "enum": [
                "adversary-model",
                "advisories",
                "attestation",
                "bom",
                "build-meta",
                "build-system",
                "certification-report",
                "chat",
                "configuration",
                "codified-infrastructure",
                "component-analysis-report",
                "distribution",
                "distribution-intake",
                "documentation",
                "dynamic-analysis-report",
                "evidence",
                "exploitability-statement",
                "formulation",
                "issue-tracker",
                "license",
                "log",
                "mailing-list",
                "maturity-report",
                "model-card",
                "other",
                "pentest-report",
                "quality-metrics",
                "release-notes",
                "risk-assessment",
                "runtime-analysis-report",
                "security-contact",
                "social",
                "static-analysis-report",
                "support",
                "threat-model",
                "vcs",
                "vulnerability-assertion",
                "website"
            ],
            "x-enum-varnames": [
                "ERTypeAdversaryModel",
                "ERTypeAdvisories",
                "ERTypeAttestation",
                "ERTypeBOM",
                "ERTypeBuildMeta",
                "ERTypeBuildSystem",
                "ERTypeCertificationReport",
                "ERTypeChat",
                "ERTypeConfiguration",
                "ERTypeCodifiedInfrastructure",
                "ERTypeComponentAnalysisReport",
                "ERTypeDistribution",
                "ERTypeDistributionIntake",
                "ERTypeDocumentation",
                "ERTypeDynamicAnalysisReport",
                "ERTypeEvidence",
                "ERTypeExploitabilityStatement",
                "ERTypeFormulation",
                "ERTypeIssueTracker",
                "ERTypeLicense",
                "ERTypeLog",
                "ERTypeMailingList",
                "ERTypeMaturityReport",
                "ERTypeModelCard",
                "ERTypeOther",
                "ERTypePentestReport",
                "ERTypeQualityMetrics",
                "ERTypeReleaseNotes",
                "ERTypeRiskAssessment",
                "ERTypeRuntimeAnalysisReport",
                "ERTypeSecurityContact",
                "ERTypeSocial",
                "ERTypeStaticAnalysisReport",
                "ERTypeSupport",
                "ERTypeThreatModel",
                "ERTypeVCS",
                "ERTypeVulnerabilityAssertion",
                "ERTypeWebsite"
            ]
        },
        "cyclonedx.Formula": {
            "type": "object",
            "properties": {
                "bom-ref": {
                    "type": "string"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Component"
                    }
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Property"
                    }
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Service"
                    }
                },
                "workflows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Workflow"
                    }
                }
            }
        },
        "cyclonedx.Hash": {
            "type": "object",
            "properties": {
                "alg": {
                    "$ref": "#/definitions/cyclonedx.HashAlgorithm"
                },
                "content": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.HashAlgorithm": {
            "type": "string",
            "enum": [
                "MD5",
                "SHA-1",
                "SHA-256",
                "SHA-384",
                "SHA-512",
                "SHA3-256",
                "SHA3-384",
                "SHA3-512",
                "BLAKE2b-256",
                "BLAKE2b-384",
                "BLAKE2b-512",
                "BLAKE3"
            ],
            "x-enum-varnames": [
                "HashAlgoMD5",
                "HashAlgoSHA1",
                "HashAlgoSHA256",
                "HashAlgoSHA384",
                "HashAlgoSHA512",
                "HashAlgoSHA3_256",
                "HashAlgoSHA3_384",
                "HashAlgoSHA3_512",
                "HashAlgoBlake2b_256",
                "HashAlgoBlake2b_384",
                "HashAlgoBlake2b_512",
                "HashAlgoBlake3"
            ]
        },
        "cyclonedx.IKEv2TransformTypes": {
            "type": "object",
            "properties": {
                "auth": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "encr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "esn": {
                    "type": "boolean"
                },
                "integ": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ke": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "prf": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "cyclonedx.IdentifiableAction": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.ImpactAnalysisJustification": {
            "type": "string",
            "enum": [
                "code_not_present",
                "code_not_reachable",
                "requires_configuration",
                "requires_dependency",
                "requires_environment",
                "protected_by_compiler",
                "protected_at_runtime",
                "protected_at_perimeter",
                "protected_by_mitigating_control"
            ],
            "x-enum-varnames": [
                "IAJCodeNotPresent",
                "IAJCodeNotReachable",
                "IAJRequiresConfiguration",
                "IAJRequiresDependency",
                "IAJRequiresEnvironment",
                "IAJProtectedByCompiler",
                "IAJProtectedAtRuntime",
                "IAJProtectedAtPerimeter",
                "IAJProtectedByMitigatingControl"
            ]
        },
        "cyclonedx.ImpactAnalysisResponse": {
            "type": "string",
            "enum": [
                "can_not_fix",
                "will_not_fix",
                "update",
                "rollback",
                "workaround_available"
            ],
            "x-enum-varnames": [
                "IARCanNotFix",
                "IARWillNotFix",
                "IARUpdate",
                "IARRollback",
                "IARWorkaroundAvailable"
            ]
        },
        "cyclonedx.ImpactAnalysisState": {
            "type": "string",
            "enum": [
                "resolved",
                "resolved_with_pedigree",
                "exploitable",
                "in_triage",
                "false_positive",
                "not_affected"
            ],
            "x-enum-varnames": [
                "IASResolved",
                "IASResolvedWithPedigree",
                "IASExploitable",
                "IASInTriage",
                "IASFalsePositive",
                "IASNotAffected"
            ]
        },
        "cyclonedx.ImplementationPlatform": {
            "type": "string",
            "enum": [
                "generic",
                "x86_32",
                "x86_64",
                "armv7-a",
                "armv7-m",
                "armv8-a",
                "armv8-m",
                "armv9-a",
                "armv9-m",
                "s390x",
                "ppc64",
                "ppc64le",
                "other",
                "unknown"
            ],
            "x-enum-varnames": [
                "ImplementationPlatformGeneric",
                "ImplementationPlatformX86_32",
                "ImplementationPlatformX86_64",
                "ImplementationPlatformARMv7A",
                "ImplementationPlatformARMv7M",
                "ImplementationPlatformARMv8A",
                "ImplementationPlatformARMv8M",
                "ImplementationPlatformARMv9A",
                "ImplementationPlatformARMv9M",
                "ImplementationPlatformS390x",
                "ImplementationPlatformPPC64",
                "ImplementationPlatformPPC64LE",
                "ImplementationPlatformOther",
                "ImplementationPlatformUnknown"
            ]
        },
        "cyclonedx.Issue": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "references": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "source": {
                    "$ref": "#/definitions/cyclonedx.Source"
                },
                "type": {
                    "$ref": "#/definitions/cyclonedx.IssueType"
                }
            }
        },
        "cyclonedx.IssueType": {
            "type": "string",
            "enum": [
                "defect",
                "enhancement",
                "security"
            ],
            "x-enum-varnames": [
                "IssueTypeDefect",
                "IssueTypeEnhancement",
                "IssueTypeSecurity"
            ]
        },
        "cyclonedx.JSFPublicKey": {
            "type": "object",
            "properties": {
                "crv": {
                    "type": "string"
                },
                "e": {
                    "type": "string"
                },
                "kty": {
                    "type": "string"
                },
                "n": {
                    "type": "string"
                },
                "x": {
                    "type": "string"
                },
                "y": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.JSFSignature": {
            "type": "object",
            "properties": {
                "chain": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.JSFSigner"
                    }
                },
                "signers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.JSFSigner"
                    }
                }
            }
        },
        "cyclonedx.JSFSigner": {
            "type": "object",
            "properties": {
                "algorithm": {
                    "type": "string"
                },
                "certificatePath": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "excludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "keyId": {
                    "type": "string"
                },
                "publicKey": {
                    "$ref": "#/definitions/cyclonedx.JSFPublicKey"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.License": {
            "type": "object",
            "properties": {
                "acknowledgement": {
                    "$ref": "#/definitions/cyclonedx.LicenseAcknowledgement"
                },
                "bom-ref": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "licensing": {
                    "$ref": "#/definitions/cyclonedx.Licensing"
                },
                "name": {
                    "type": "string"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Property"
                    }
                },
                "text": {
                    "$ref": "#/definitions/cyclonedx.AttachedText"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.LicenseAcknowledgement": {
            "type": "string",
            "enum": [
                "declared",
                "concluded"
            ],
            "x-enum-varnames": [
                "LicenseAcknowledgementDeclared",
                "LicenseAcknowledgementConcluded"
            ]
        },
        "cyclonedx.LicenseChoice": {
            "type": "object",
            "properties": {
                "expression": {
                    "type": "string"
                },
                "license": {
                    "$ref": "#/definitions/cyclonedx.License"
                }
            }
        },
        "cyclonedx.LicenseType": {
            "type": "string",
            "enum": [
                "academic",
                "appliance",
                "client-access",
                "concurrent-user",
                "core-points",
                "custom-metric",
                "device",
                "evaluation",
                "named-user",
                "node-locked",
                "oem",
                "other",
                "perpetual",
                "processor-points",
                "subscription",
                "user"
            ],
            "x-enum-varnames": [
                "LicenseTypeAcademic",
                "LicenseTypeAppliance",
                "LicenseTypeClientAccess",
                "LicenseTypeConcurrentUser",
                "LicenseTypeCorePoints",
                "LicenseTypeCustomMetric",
                "LicenseTypeDevice",
                "LicenseTypeEvaluation",
                "LicenseTypeNamedUser",
                "LicenseTypeNodeLocked",
                "LicenseTypeOEM",
                "LicenseTypeOther",
                "LicenseTypePerpetual",
                "LicenseTypeProcessorPoints",
                "LicenseTypeSubscription",
                "LicenseTypeUser"
            ]
        },
        "cyclonedx.Licensing": {
            "type": "object",
            "properties": {
                "altIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "expiration": {
                    "type": "string"
                },
                "lastRenewal": {
                    "type": "string"
                },
                "licenseTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.LicenseType"
                    }
                },
                "licensee": {
                    "$ref": "#/definitions/cyclonedx.OrganizationalEntityOrContact"
                },
                "licensor": {
                    "$ref": "#/definitions/cyclonedx.OrganizationalEntityOrContact"
                },
                "purchaseOrder": {
                    "type": "string"
                },
                "purchaser": {
                    "$ref": "#/definitions/cyclonedx.OrganizationalEntityOrContact"
                }
            }
        },
        "cyclonedx.Lifecycle": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phase": {
                    "$ref": "#/definitions/cyclonedx.LifecyclePhase"
                }
            }
        },
        "cyclonedx.LifecyclePhase": {
            "type": "string",
            "enum": [
                "build",
                "decommission",
                "design",
                "discovery",
                "operations",
                "post-build",
                "pre-build"
            ],
            "x-enum-varnames": [
                "LifecyclePhaseBuild",
                "LifecyclePhaseDecommission",
                "LifecyclePhaseDesign",
                "LifecyclePhaseDiscovery",
                "LifecyclePhaseOperations",
                "LifecyclePhasePostBuild",
                "LifecyclePhasePreBuild"
            ]
        },
        "cyclonedx.MLDatasetChoice": {
            "type": "object"
        },
        "cyclonedx.MLInputOutputParameters": {
            "type": "object",
            "properties": {
                "format": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.MLModelCO2Measure": {
            "type": "object",
            "properties": {
                "unit": {
                    "$ref": "#/definitions/cyclonedx.MLModelCO2Unit"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "cyclonedx.MLModelCO2Unit": {
            "type": "string",
            "enum": [
                "tCO2eq"
            ],
            "x-enum-varnames": [
                "MLModelCO2UnitTCO2Eq"
            ]
        },
        "cyclonedx.MLModelCard": {
            "type": "object",
            "properties": {
                "bom-ref": {
                    "type": "string"
                },
                "considerations": {
                    "$ref": "#/definitions/cyclonedx.MLModelCardConsiderations"
                },
                "modelParameters": {
                    "$ref": "#/definitions/cyclonedx.MLModelParameters"
                },
                "quantitativeAnalysis": {
                    "$ref": "#/definitions/cyclonedx.MLQuantitativeAnalysis"
                }
            }
        },
        "cyclonedx.MLModelCardConsiderations": {
            "type": "object",
            "properties": {
                "environmentalConsiderations": {
                    "$ref": "#/definitions/cyclonedx.MLModelCardEnvironmentalConsiderations"
                },
                "ethicalConsiderations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.MLModelCardEthicalConsideration"
                    }
                },
                "fairnessAssessments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.MLModelCardFairnessAssessment"
                    }
                },
                "performanceTradeoffs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "technicalLimitations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "useCases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "cyclonedx.MLModelCardEnvironmentalConsiderations": {
            "type": "object",
            "properties": {
                "energyConsumptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.MLModelEnergyConsumption"
                    }
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Property"
                    }
                }
            }
        },
        "cyclonedx.MLModelCardEthicalConsideration": {
            "type": "object",
            "properties": {
                "mitigationStrategy": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.MLModelCardFairnessAssessment": {
            "type": "object",
            "properties": {
                "benefits": {
                    "type": "string"
                },
                "groupAtRisk": {
                    "type": "string"
                },
                "harms": {
                    "type": "string"
                },
                "mitigationStrategy": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.MLModelEnergyConsumption": {
            "type": "object",
            "properties": {
                "activity": {
                    "$ref": "#/definitions/cyclonedx.MLModelEnergyConsumptionActivity"
                },
                "activityEnergyCost": {
                    "$ref": "#/definitions/cyclonedx.MLModelEnergyMeasure"
                },
                "co2CostEquivalent": {
                    "$ref": "#/definitions/cyclonedx.MLModelCO2Measure"
                },
                "co2CostOffset": {
                    "$ref": "#/definitions/cyclonedx.MLModelCO2Measure"
                },
                "energyProviders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.MLModelEnergyProvider"
                    }
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Property"
                    }
                }
            }
        },
        "cyclonedx.MLModelEnergyConsumptionActivity": {
            "type": "string",
            "enum": [
                "design",
                "data-collection",
                "data-preparation",
                "training",
                "fine-tuning",
                "validation",
                "deployment",
                "inference",
                "other"
            ],
            "x-enum-varnames": [
                "MLModelEnergyConsumptionActivityDesign",
                "MLModelEnergyConsumptionActivityDataCollection",
                "MLModelEnergyConsumptionActivityDataPreparation",
                "MLModelEnergyConsumptionActivityTraining",
                "MLModelEnergyConsumptionActivityFineTuning",
                "MLModelEnergyConsumptionActivityValidation",
                "MLModelEnergyConsumptionActivityDeployment",
                "MLModelEnergyConsumptionActivityInference",
                "MLModelEnergyConsumptionActivityOther"
            ]
        },
        "cyclonedx.MLModelEnergyMeasure": {
            "type": "object",
            "properties": {
                "unit": {
                    "$ref": "#/definitions/cyclonedx.MLModelEnergyUnit"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "cyclonedx.MLModelEnergyProvider": {
            "type": "object",
            "properties": {
                "bom-ref": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "energyProvided": {
                    "$ref": "#/definitions/cyclonedx.MLModelEnergyMeasure"
                },
                "energySource": {
                    "$ref": "#/definitions/cyclonedx.MLModelEnergySource"
                },
                "externalReferences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.ExternalReference"
                    }
                },
                "organization": {
                    "$ref": "#/definitions/cyclonedx.OrganizationalEntity"
                }
            }
        },
        "cyclonedx.MLModelEnergySource": {
            "type": "string",
            "enum": [
                "coal",
                "oil",
                "natural-gas",
                "nuclear",
                "wind",
                "solar",
                "geothermal",
                "hydropower",
                "biofuel",
                "unknown",
                "other"
            ],
            "x-enum-varnames": [
                "MLModelEnergySourceCoal",
                "MLModelEnergySourceOil",
                "MLModelEnergySourceNaturalGas",
                "MLModelEnergySourceNuclear",
                "MLModelEnergySourceWind",
                "MLModelEnergySourceSolar",
                "MLModelEnergySourceGeothermal",
                "MLModelEnergySourceHydropower",
                "MLModelEnergySourceBiofuel",
                "MLModelEnergySourceUnknown",
                "MLModelEnergySourceOther"
            ]
        },
        "cyclonedx.MLModelEnergyUnit": {
            "type": "string",
            "enum": [
                "kWh"
            ],
            "x-enum-varnames": [
                "MLModelEnergyUnitKWH"
            ]
        },
        "cyclonedx.MLModelParameters": {
            "type": "object",
            "properties": {
                "approach": {
                    "$ref": "#/definitions/cyclonedx.MLModelParametersApproach"
                },
                "architectureFamily": {
                    "type": "string"
                },
                "datasets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.MLDatasetChoice"
                    }
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.MLInputOutputParameters"
                    }
                },
                "modelArchitecture": {
                    "type": "string"
                },
                "outputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.MLInputOutputParameters"
                    }
                },
                "task": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.MLModelParametersApproach": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/definitions/cyclonedx.MLModelParametersApproachType"
                }
            }
        },
        "cyclonedx.MLModelParametersApproachType": {
            "type": "string",
            "enum": [
                "supervised",
                "unsupervised",
                "reinforcement-learning",
                "semi-supervised",
                "self-supervised"
            ],
            "x-enum-varnames": [
                "MLModelParametersApproachTypeSupervised",
                "MLModelParametersApproachTypeUnsupervised",
                "MLModelParametersApproachTypeReinforcementLearning",
                "MLModelParametersApproachTypeSemiSupervised",
                "MLModelParametersApproachTypeSelfSupervised"
            ]
        },
        "cyclonedx.MLPerformanceMetric": {
            "type": "object",
            "properties": {
                "confidenceInterval": {
                    "$ref": "#/definitions/cyclonedx.MLPerformanceMetricConfidenceInterval"
                },
                "slice": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.MLPerformanceMetricConfidenceInterval": {
            "type": "object",
            "properties": {
                "lowerBound": {
                    "type": "string"
                },
                "upperBound": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.MLQuantitativeAnalysis": {
            "type": "object",
            "properties": {
                "graphics": {
                    "$ref": "#/definitions/cyclonedx.ComponentDataGraphics"
                },
                "performanceMetrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.MLPerformanceMetric"
                    }
                }
            }
        },
        "cyclonedx.Metadata": {
            "type": "object",
            "properties": {
                "authors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.OrganizationalContact"
                    }
                },
                "component": {
                    "$ref": "#/definitions/cyclonedx.Component"
                },
                "licenses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.LicenseChoice"
                    }
                },
                "lifecycles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Lifecycle"
                    }
                },
                "manufacture": {
                    "description": "Deprecated: Use Component Manufacturer instead.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cyclonedx.OrganizationalEntity"
                        }
                    ]
                },
                "manufacturer": {
                    "$ref": "#/definitions/cyclonedx.OrganizationalEntity"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Property"
                    }
                },
                "supplier": {
                    "$ref": "#/definitions/cyclonedx.OrganizationalEntity"
                },
                "timestamp": {
                    "type": "string"
                },
                "tools": {
                    "$ref": "#/definitions/cyclonedx.ToolsChoice"
                }
            }
        },
        "cyclonedx.Note": {
            "type": "object",
            "properties": {
                "locale": {
                    "type": "string"
                },
                "text": {
                    "$ref": "#/definitions/cyclonedx.AttachedText"
                }
            }
        },
        "cyclonedx.OrganizationalContact": {
            "type": "object",
            "properties": {
                "bom-ref": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.OrganizationalEntity": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/cyclonedx.PostalAddress"
                },
                "bom-ref": {
                    "type": "string"
                },
                "contact": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.OrganizationalContact"
                    }
                },
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "cyclonedx.OrganizationalEntityOrContact": {
            "type": "object",
            "properties": {
                "individual": {
                    "$ref": "#/definitions/cyclonedx.OrganizationalContact"
                },
                "organization": {
                    "$ref": "#/definitions/cyclonedx.OrganizationalEntity"
                }
            }
        },
        "cyclonedx.Parameter": {
            "type": "object",
            "properties": {
                "dataType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.Patch": {
            "type": "object",
            "properties": {
                "diff": {
                    "$ref": "#/definitions/cyclonedx.Diff"
                },
                "resolves": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Issue"
                    }
                },
                "type": {
                    "$ref": "#/definitions/cyclonedx.PatchType"
                }
            }
        },
        "cyclonedx.PatchType": {
            "type": "string",
            "enum": [
                "backport",
                "cherry-pick",
                "monkey",
                "unofficial"
            ],
            "x-enum-varnames": [
                "PatchTypeBackport",
                "PatchTypeCherryPick",
                "PatchTypeMonkey",
                "PatchTypeUnofficial"
            ]
        },
        "cyclonedx.Pedigree": {
            "type": "object",
            "properties": {
                "ancestors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Component"
                    }
                },
                "commits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Commit"
                    }
                },
                "descendants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Component"
                    }
                },
                "notes": {
                    "type": "string"
                },
                "patches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Patch"
                    }
                },
                "variants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Component"
                    }
                }
            }
        },
        "cyclonedx.PostalAddress": {
            "type": "object",
            "properties": {
                "bom-ref": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "locality": {
                    "type": "string"
                },
                "postOfficeBoxNumber": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "streetAddress": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.ProofOfConcept": {
            "type": "object",
            "properties": {
                "environment": {
                    "type": "string"
                },
                "reproductionSteps": {
                    "type": "string"
                },
                "supportingMaterial": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.AttachedText"
                    }
                }
            }
        },
        "cyclonedx.Property": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.RelatedCryptoMaterialProperties": {
            "type": "object",
            "properties": {
                "activationDate": {
                    "type": "string"
                },
                "algorithmRef": {
                    "type": "string"
                },
                "creationDate": {
                    "type": "string"
                },
                "expirationDate": {
                    "type": "string"
                },
                "format": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "securedBy": {
                    "$ref": "#/definitions/cyclonedx.SecuredBy"
                },
                "size": {
                    "type": "integer"
                },
                "state": {
                    "$ref": "#/definitions/cyclonedx.CryptoKeyState"
                },
                "type": {
                    "$ref": "#/definitions/cyclonedx.RelatedCryptoMaterialType"
                },
                "updateDate": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.RelatedCryptoMaterialType": {
            "type": "string",
            "enum": [
                "private-key",
                "public-key",
                "secret-key",
                "key",
                "ciphertext",
                "signature",
                "digest",
                "initialization-vector",
                "nonce",
                "seed",
                "salt",
                "shared-secret",
                "tag",
                "additional-data",
                "password",
                "credential",
                "token",
                "other",
                "unknown"
            ],
            "x-enum-varnames": [
                "RelatedCryptoMaterialTypePrivateKey",
                "RelatedCryptoMaterialTypePublicKey",
                "RelatedCryptoMaterialTypeSecretKey",
                "RelatedCryptoMaterialTypeKey",
                "RelatedCryptoMaterialTypeCiphertext",
                "RelatedCryptoMaterialTypeSignature",
                "RelatedCryptoMaterialTypeDigest",
                "RelatedCryptoMaterialTypeInitializationVector",
                "RelatedCryptoMaterialTypeNonce",
                "RelatedCryptoMaterialTypeSeed",
                "RelatedCryptoMaterialTypeSalt",
                "RelatedCryptoMaterialTypeSharedSecret",
                "RelatedCryptoMaterialTypeTag",
                "RelatedCryptoMaterialTypeAdditionalData",
                "RelatedCryptoMaterialTypePassword",
                "RelatedCryptoMaterialTypeCredential",
                "RelatedCryptoMaterialTypeToken",
                "RelatedCryptoMaterialTypeOther",
                "RelatedCryptoMaterialTypeUnknown"
            ]
        },
        "cyclonedx.ReleaseNotes": {
            "type": "object",
            "properties": {
                "aliases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "featuredImage": {
                    "type": "string"
                },
                "notes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Note"
                    }
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Property"
                    }
                },
                "resolves": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Issue"
                    }
                },
                "socialImage": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timestamp": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.ResourceReferenceChoice": {
            "type": "object",
            "properties": {
                "externalReference": {
                    "$ref": "#/definitions/cyclonedx.ExternalReference"
                },
                "ref": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.SWID": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "patch": {
                    "type": "boolean"
                },
                "tagId": {
                    "type": "string"
                },
                "tagVersion": {
                    "type": "integer"
                },
                "text": {
                    "$ref": "#/definitions/cyclonedx.AttachedText"
                },
                "url": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.Scope": {
            "type": "string",
            "enum": [
                "excluded",
                "optional",
                "required"
            ],
            "x-enum-varnames": [
                "ScopeExcluded",
                "ScopeOptional",
                "ScopeRequired"
            ]
        },
        "cyclonedx.ScoringMethod": {
            "type": "string",
            "enum": [
                "other",
                "CVSSv2",
                "CVSSv3",
                "CVSSv31",
                "CVSSv4",
                "OWASP",
                "SSVC"
            ],
            "x-enum-varnames": [
                "ScoringMethodOther",
                "ScoringMethodCVSSv2",
                "ScoringMethodCVSSv3",
                "ScoringMethodCVSSv31",
                "ScoringMethodCVSSv4",
                "ScoringMethodOWASP",
                "ScoringMethodSSVC"
            ]
        },
        "cyclonedx.SecuredBy": {
            "type": "object",
            "properties": {
                "algorithmRef": {
                    "type": "string"
                },
                "mechanism": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.Service": {
            "type": "object",
            "properties": {
                "authenticated": {
                    "type": "boolean"
                },
                "bom-ref": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.DataClassification"
                    }
                },
                "description": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "externalReferences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.ExternalReference"
                    }
                },
                "group": {
                    "type": "string"
                },
                "licenses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.LicenseChoice"
                    }
                },
                "name": {
                    "type": "string"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Property"
                    }
                },
                "provider": {
                    "$ref": "#/definitions/cyclonedx.OrganizationalEntity"
                },
                "releaseNotes": {
                    "$ref": "#/definitions/cyclonedx.ReleaseNotes"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Service"
                    }
                },
                "version": {
                    "type": "string"
                },
                "x-trust-boundary": {
                    "type": "boolean"
                }
            }
        },
        "cyclonedx.Severity": {
            "type": "string",
            "enum": [
                "unknown",
                "none",
                "info",
                "low",
                "medium",
                "high",
                "critical"
            ],
            "x-enum-varnames": [
                "SeverityUnknown",
                "SeverityNone",
                "SeverityInfo",
                "SeverityLow",
                "SeverityMedium",
                "SeverityHigh",
                "SeverityCritical"
            ]
        },
        "cyclonedx.Signatory": {
            "type": "object",
            "properties": {
                "externalReference": {
                    "$ref": "#/definitions/cyclonedx.ExternalReference"
                },
                "name": {
                    "type": "string"
                },
                "organization": {
                    "$ref": "#/definitions/cyclonedx.OrganizationalEntity"
                },
                "role": {
                    "type": "string"
                },
                "signature": {
                    "$ref": "#/definitions/cyclonedx.JSFSignature"
                }
            }
        },
        "cyclonedx.Source": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.SpecVersion": {
            "type": "integer",
            "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7
            ],
            "x-enum-comments": {
                "SpecVersion1_0": "1.0",
                "SpecVersion1_1": "1.1",
                "SpecVersion1_2": "1.2",
                "SpecVersion1_3": "1.3",
                "SpecVersion1_4": "1.4",
                "SpecVersion1_5": "1.5",
                "SpecVersion1_6": "1.6"
            },
            "x-enum-varnames": [
                "SpecVersion1_0",
                "SpecVersion1_1",
                "SpecVersion1_2",
                "SpecVersion1_3",
                "SpecVersion1_4",
                "SpecVersion1_5",
                "SpecVersion1_6"
            ]
        },
        "cyclonedx.StandardDefinition": {
            "type": "object",
            "properties": {
                "bom-ref": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "externalReferences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.ExternalReference"
                    }
                },
                "levels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.StandardLevel"
                    }
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "requirements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.StandardRequirement"
                    }
                },
                "signature": {
                    "$ref": "#/definitions/cyclonedx.JSFSignature"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.StandardLevel": {
            "type": "object",
            "properties": {
                "bom-ref": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "identifier": {
                    "type": "string"
                },
                "requirements": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.StandardRequirement": {
            "type": "object",
            "properties": {
                "bom-ref": {
                    "type": "string"
                },
                "descriptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "externalReferences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.ExternalReference"
                    }
                },
                "identifier": {
                    "type": "string"
                },
                "openCre": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "parent": {
                    "type": "string"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Property"
                    }
                },
                "text": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.Targets": {
            "type": "object",
            "properties": {
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Component"
                    }
                },
                "organizations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.OrganizationalEntity"
                    }
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Service"
                    }
                }
            }
        },
        "cyclonedx.Task": {
            "type": "object",
            "properties": {
                "bom-ref": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.TaskInput"
                    }
                },
                "name": {
                    "type": "string"
                },
                "outputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.TaskOutput"
                    }
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Property"
                    }
                },
                "resourceReferences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.ResourceReferenceChoice"
                    }
                },
                "runtimeTopology": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Dependency"
                    }
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.TaskStep"
                    }
                },
                "taskTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.TaskType"
                    }
                },
                "timeEnd": {
                    "type": "string"
                },
                "timeStart": {
                    "type": "string"
                },
                "trigger": {
                    "$ref": "#/definitions/cyclonedx.TaskTrigger"
                },
                "uid": {
                    "type": "string"
                },
                "workspaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.TaskWorkspace"
                    }
                }
            }
        },
        "cyclonedx.TaskCommand": {
            "type": "object",
            "properties": {
                "executed": {
                    "type": "string"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Property"
                    }
                }
            }
        },
        "cyclonedx.TaskInput": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/cyclonedx.AttachedText"
                },
                "environmentVars": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.EnvironmentVariableChoice"
                    }
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Parameter"
                    }
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Property"
                    }
                },
                "resource": {
                    "$ref": "#/definitions/cyclonedx.ResourceReferenceChoice"
                },
                "source": {
                    "$ref": "#/definitions/cyclonedx.ResourceReferenceChoice"
                },
                "target": {
                    "$ref": "#/definitions/cyclonedx.ResourceReferenceChoice"
                }
            }
        },
        "cyclonedx.TaskOutput": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/cyclonedx.AttachedText"
                },
                "environmentVars": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.EnvironmentVariableChoice"
                    }
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Parameter"
                    }
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Property"
                    }
                },
                "resource": {
                    "$ref": "#/definitions/cyclonedx.ResourceReferenceChoice"
                },
                "source": {
                    "$ref": "#/definitions/cyclonedx.ResourceReferenceChoice"
                },
                "target": {
                    "$ref": "#/definitions/cyclonedx.ResourceReferenceChoice"
                },
                "type": {
                    "$ref": "#/definitions/cyclonedx.TaskOutputType"
                }
            }
        },
        "cyclonedx.TaskOutputType": {
            "type": "string",
            "enum": [
                "artifact",
                "attestation",
                "evidence",
                "log",
                "metrics",
                "other"
            ],
            "x-enum-varnames": [
                "TaskOutputTypeArtifact",
                "TaskOutputTypeAttestation",
                "TaskOutputTypeEvidence",
                "TaskOutputTypeLog",
                "TaskOutputTypeMetrics",
                "TaskOutputTypeOther"
            ]
        },
        "cyclonedx.TaskStep": {
            "type": "object",
            "properties": {
                "commands": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.TaskCommand"
                    }
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Property"
                    }
                }
            }
        },
        "cyclonedx.TaskTrigger": {
            "type": "object",
            "properties": {
                "bom-ref": {
                    "type": "string"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.TaskTriggerCondition"
                    }
                },
                "description": {
                    "type": "string"
                },
                "event": {
                    "$ref": "#/definitions/cyclonedx.Event"
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.TaskInput"
                    }
                },
                "name": {
                    "type": "string"
                },
                "outputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.TaskOutput"
                    }
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Property"
                    }
                },
                "resourceReferences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.ResourceReferenceChoice"
                    }
                },
                "timeActivated": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/cyclonedx.TaskTriggerType"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.TaskTriggerCondition": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "expression": {
                    "type": "string"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Property"
                    }
                }
            }
        },
        "cyclonedx.TaskTriggerType": {
            "type": "string",
            "enum": [
                "api",
                "manual",
                "scheduled",
                "webhook"
            ],
            "x-enum-varnames": [
                "TaskTriggerTypeAPI",
                "TaskTriggerTypeManual",
                "TaskTriggerTypeScheduled",
                "TaskTriggerTypeWebhook"
            ]
        },
        "cyclonedx.TaskType": {
            "type": "string",
            "enum": [
                "build",
                "clean",
                "clone",
                "copy",
                "deliver",
                "deploy",
                "lint",
                "merge",
                "other",
                "release",
                "scan",
                "test"
            ],
            "x-enum-varnames": [
                "TaskTypeBuild",
                "TaskTypeClean",
                "TaskTypeClone",
                "TaskTypeCopy",
                "TaskTypeDeliver",
                "TaskTypeDeploy",
                "TaskTypeLint",
                "TaskTypeMerge",
                "TaskTypeOther",
                "TaskTypeRelease",
                "TaskTypeScan",
                "TaskTypeTest"
            ]
        },
        "cyclonedx.TaskWorkspace": {
            "type": "object",
            "properties": {
                "accessMode": {
                    "$ref": "#/definitions/cyclonedx.TaskWorkspaceAccessMode"
                },
                "aliases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "bom-ref": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "managedDataType": {
                    "type": "string"
                },
                "mountPath": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Property"
                    }
                },
                "resourceReferences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.ResourceReferenceChoice"
                    }
                },
                "uid": {
                    "type": "string"
                },
                "volume": {
                    "$ref": "#/definitions/cyclonedx.Volume"
                },
                "volumeRequest": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.TaskWorkspaceAccessMode": {
            "type": "string",
            "enum": [
                "read-only",
                "read-write",
                "read-write-once",
                "write-once",
                "write-only"
            ],
            "x-enum-varnames": [
                "TaskWorkspaceAccessModeReadOnly",
                "TaskWorkspaceAccessModeReadWrite",
                "TaskWorkspaceAccessModeReadWriteOnce",
                "TaskWorkspaceAccessModeWriteOnce",
                "TaskWorkspaceAccessModeWriteOnly"
            ]
        },
        "cyclonedx.ToolsChoice": {
            "type": "object"
        },
        "cyclonedx.Volume": {
            "type": "object",
            "properties": {
                "mode": {
                    "$ref": "#/definitions/cyclonedx.VolumeMode"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "persistent": {
                    "type": "boolean"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Property"
                    }
                },
                "remote": {
                    "type": "boolean"
                },
                "sizeAllocated": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.VolumeMode": {
            "type": "string",
            "enum": [
                "block",
                "file-system"
            ],
            "x-enum-varnames": [
                "VolumeModeBlock",
                "VolumeModeFilesystem"
            ]
        },
        "cyclonedx.Vulnerability": {
            "type": "object",
            "properties": {
                "advisories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Advisory"
                    }
                },
                "affects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Affects"
                    }
                },
                "analysis": {
                    "$ref": "#/definitions/cyclonedx.VulnerabilityAnalysis"
                },
                "bom-ref": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "credits": {
                    "$ref": "#/definitions/cyclonedx.Credits"
                },
                "cwes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "description": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "proofOfConcept": {
                    "$ref": "#/definitions/cyclonedx.ProofOfConcept"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Property"
                    }
                },
                "published": {
                    "type": "string"
                },
                "ratings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.VulnerabilityRating"
                    }
                },
                "recommendation": {
                    "type": "string"
                },
                "references": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.VulnerabilityReference"
                    }
                },
                "rejected": {
                    "type": "string"
                },
                "source": {
                    "$ref": "#/definitions/cyclonedx.Source"
                },
                "tools": {
                    "$ref": "#/definitions/cyclonedx.ToolsChoice"
                },
                "updated": {
                    "type": "string"
                },
                "workaround": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.VulnerabilityAnalysis": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "firstIssued": {
                    "type": "string"
                },
                "justification": {
                    "$ref": "#/definitions/cyclonedx.ImpactAnalysisJustification"
                },
                "lastUpdated": {
                    "type": "string"
                },
                "response": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.ImpactAnalysisResponse"
                    }
                },
                "state": {
                    "$ref": "#/definitions/cyclonedx.ImpactAnalysisState"
                }
            }
        },
        "cyclonedx.VulnerabilityRating": {
            "type": "object",
            "properties": {
                "justification": {
                    "type": "string"
                },
                "method": {
                    "$ref": "#/definitions/cyclonedx.ScoringMethod"
                },
                "score": {
                    "type": "number"
                },
                "severity": {
                    "$ref": "#/definitions/cyclonedx.Severity"
                },
                "source": {
                    "$ref": "#/definitions/cyclonedx.Source"
                },
                "vector": {
                    "type": "string"
                }
            }
        },
        "cyclonedx.VulnerabilityReference": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "source": {
                    "$ref": "#/definitions/cyclonedx.Source"
                }
            }
        },
        "cyclonedx.VulnerabilityStatus": {
            "type": "string",
            "enum": [
                "unknown",
                "affected",
                "unaffected"
            ],
            "x-enum-varnames": [
                "VulnerabilityStatusUnknown",
                "VulnerabilityStatusAffected",
                "VulnerabilityStatusNotAffected"
            ]
        },
        "cyclonedx.Workflow": {
            "type": "object",
            "properties": {
                "bom-ref": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.TaskInput"
                    }
                },
                "name": {
                    "type": "string"
                },
                "outputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.TaskOutput"
                    }
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Property"
                    }
                },
                "resourceReferences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.ResourceReferenceChoice"
                    }
                },
                "runtimeTopology": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Dependency"
                    }
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.TaskStep"
                    }
                },
                "taskDependencies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Dependency"
                    }
                },
                "taskTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.TaskType"
                    }
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.Task"
                    }
                },
                "timeEnd": {
                    "type": "string"
                },
                "timeStart": {
                    "type": "string"
                },
                "trigger": {
                    "$ref": "#/definitions/cyclonedx.TaskTrigger"
                },
                "uid": {
                    "type": "string"
                },
                "workspaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cyclonedx.TaskWorkspace"
                    }
                }
            }
        },
        "server.errorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "server.imageGetRequest": {
            "type": "object",
            "required": [
                "image"
            ],
            "properties": {
                "bom": {
                    "$ref": "#/definitions/cyclonedx.BOM"
                },
                "image": {
                    "type": "string",
                    "example": "nginx"
                },
                "plugins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "certificates"
                    ]
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "CBOMkit-theia",
	Description:      "CBOMkit-theia analyzes cryptographic assets in a container image or directory.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
